{
	"id": "0d3eeabe99a1e4718dfaf3d641bd1dd1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.2",
	"solcLongVersion": "0.6.2+commit.bacdbe57",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Push.sol": {
				"content": "// SPDX-License-Identifier: Mit\n\npragma solidity ^0.6.2;\n \nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\";\n\n// PUSH Comm Contract Interface\ninterface IPUSHCommInterface {\n    function sendNotification(address _channel, address _recipient, bytes calldata _identity) external;\n}\n\ncontract Push is ERC20 {\n    // EPNS COMM ADDRESS ON ETHEREUM KOVAN, CHECK THIS: https://docs.epns.io/developers/developer-tooling/epns-smart-contracts/epns-contract-addresses\n    address public EPNS_COMM_ADDRESS = 0x87da9Af1899ad477C67FeA31ce89c1d2435c77DC;\n\n    constructor ()\n        ERC20(\"Push Token\", \"PUSH\")\n        public {\n        _mint(msg.sender, 1000 * 10 ** uint(decimals()));\n    }\n\n    function transfer(address to, uint amount) override public returns (bool success) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n\n        //\"0+3+Hooray! \", msg.sender, \" sent \", token amount, \" PUSH to you!\"\n        IPUSHCommInterface(EPNS_COMM_ADDRESS).sendNotification(\n            0x050Ca75E3957c37dDF26D58046d8F9967B88190c, // from channel\n            to, // to recipient, put address(this) in case you want Broadcast or Subset. For Targetted put the address to which you want to send\n            bytes(\n                string(\n                    // We are passing identity here: https://docs.epns.io/developers/developer-guides/sending-notifications/advanced/notification-payload-types/identity/payload-identity-implementations\n                    abi.encodePacked(\n                        \"0\", // this is notification identity: https://docs.epns.io/developers/developer-guides/sending-notifications/advanced/notification-payload-types/identity/payload-identity-implementations\n                        \"+\", // segregator\n                        \"3\", // this is payload type: https://docs.epns.io/developers/developer-guides/sending-notifications/advanced/notification-payload-types/payload (1, 3 or 4) = (Broadcast, targetted or subset)\n                        \"+\", // segregator\n                        \"Tranfer Alert\", // this is notificaiton title\n                        \"+\", // segregator\n                        \"Hooray! \", // notification body\n                        addressToString(msg.sender), // notification body\n                        \" sent \", // notification body\n                        // uint2str(amount.div(10 ** uint(decimals()))), // notification body\n                        \" PUSH to you!\" // notification body\n                    )\n                )\n            )\n        );\n        \n        return true;\n    }\n\n    // Helper function to convert address to string\n    function addressToString(address _address) internal pure returns(string memory) {\n        bytes32 _bytes = bytes32(uint256(uint160(_address)));\n        bytes memory HEX = \"0123456789abcdef\";\n        bytes memory _string = new bytes(42);\n        _string[0] = '0';\n        _string[1] = 'x';\n        for(uint i = 0; i < 20; i++) {\n            _string[2+i*2] = HEX[uint8(_bytes[i + 12] >> 4)];\n            _string[3+i*2] = HEX[uint8(_bytes[i + 12] & 0x0f)];\n        }\n        return string(_string);\n    }\n\n    // Helper function to convert uint to string\n    // function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n    //     if (_i == 0) {\n    //         return \"0\";\n    //     }\n    //     uint j = _i;\n    //     uint len;\n    //     while (j != 0) {\n    //         len++;\n    //         j /= 10;\n    //     }\n    //     bytes memory bstr = new bytes(len);\n    //     uint k = len - 1;\n    //     while (_i != 0) {\n    //         bstr[k--] = byte(uint8(48 + _i % 10));\n    //         _i /= 10;\n    //     }\n    //     return string(bstr);\n    // }\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol": {
				"content": "pragma solidity ^0.6.0;\n\nimport \"../../GSN/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20MinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor () internal { }\n\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Push.sol": {
				"IPUSHCommInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_channel",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_identity",
									"type": "bytes"
								}
							],
							"name": "sendNotification",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"sendNotification(address,address,bytes)": "ba3d69d7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_channel\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_identity\",\"type\":\"bytes\"}],\"name\":\"sendNotification\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Push.sol\":\"IPUSHCommInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Push.sol\":{\"keccak256\":\"0xad17c543913892c1d0d3daee91bed65790364e138929a6572022928c7fd084e5\",\"urls\":[\"bzz-raw://e2609df591c01744148e921b40ea96707a04371de50d721ec55218a202ac270e\",\"dweb:/ipfs/QmUMmQLCMhJ9C2HAUgy6SwmC82N7YB7y75WcPom5FGkT4y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Push": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "EPNS_COMM_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/Push.sol\":339:3747  contract Push is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Push.sol\":554:596  0x87da9Af1899ad477C67FeA31ce89c1d2435c77DC */\n  0x87da9af1899ad477c67fea31ce89c1d2435c77dc\n    /* \"contracts/Push.sol\":519:596  address public EPNS_COMM_ADDRESS = 0x87da9Af1899ad477C67FeA31ce89c1d2435c77DC */\n  0x05\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Push.sol\":603:734  constructor ()... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Push.sol\":603:734  constructor ()... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1974:2115  constructor (string memory name, string memory symbol) public {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5075736820546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5055534800000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2054:2058  name */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2046:2058  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2078:2084  symbol */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2068:2075  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2068:2084  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2106:2108  18 */\n  0x12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2094:2103  _decimals */\n  0x05\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2094:2108  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1974:2115  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n    /* \"contracts/Push.sol\":679:727  _mint(msg.sender, 1000 * 10 ** uint(decimals())) */\n  tag_11\n    /* \"contracts/Push.sol\":685:695  msg.sender */\n  caller\n    /* \"contracts/Push.sol\":715:725  decimals() */\n  tag_12\n    /* \"contracts/Push.sol\":715:723  decimals */\n  shl(0x20, tag_13)\n    /* \"contracts/Push.sol\":715:725  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Push.sol\":710:726  uint(decimals()) */\n  0xff\n  and\n    /* \"contracts/Push.sol\":704:706  10 */\n  0x0a\n    /* \"contracts/Push.sol\":704:726  10 ** uint(decimals()) */\n  exp\n    /* \"contracts/Push.sol\":697:701  1000 */\n  0x03e8\n    /* \"contracts/Push.sol\":697:726  1000 * 10 ** uint(decimals()) */\n  mul\n    /* \"contracts/Push.sol\":679:684  _mint */\n  shl(0x20, tag_14)\n    /* \"contracts/Push.sol\":679:727  _mint(msg.sender, 1000 * 10 ** uint(decimals())) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/Push.sol\":339:3747  contract Push is ERC20 {... */\n  jump(tag_15)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3082:3163  function decimals() public view returns (uint8) {... */\ntag_13:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3123:3128  uint8 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3147:3156  _decimals */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3140:3156  return _decimals */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3082:3163  function decimals() public view returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7796:8166  function _mint(address account, uint256 amount) internal virtual {... */\ntag_14:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7898:7899  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7879:7900  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7879:7886  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7879:7900  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7871:7936  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7947:7996  _beforeTokenTransfer(address(0), account, amount) */\n  tag_19\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7976:7977  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7980:7987  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7989:7995  amount */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7947:7967  _beforeTokenTransfer */\n  shl(0x20, tag_20)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7947:7996  _beforeTokenTransfer(address(0), account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8022:8046  _totalSupply.add(amount) */\n  tag_21\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8039:8045  amount */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8022:8034  _totalSupply */\n  sload(0x02)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8022:8038  _totalSupply.add */\n  or(tag_0_79, shl(0x20, tag_22))\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8022:8046  _totalSupply.add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8007:8019  _totalSupply */\n  0x02\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8007:8046  _totalSupply = _totalSupply.add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8077:8107  _balances[account].add(amount) */\n  tag_23\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8100:8106  amount */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8077:8086  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8077:8095  _balances[account] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8087:8094  account */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8077:8095  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8077:8099  _balances[account].add */\n  or(tag_0_79, shl(0x20, tag_22))\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8077:8107  _balances[account].add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8056:8065  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8056:8074  _balances[account] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8066:8073  account */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8056:8074  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8056:8107  _balances[account] = _balances[account].add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8143:8150  account */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8122:8159  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8139:8140  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8122:8159  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8152:8158  amount */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":8122:8159  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7796:8166  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":10658:10750  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\ntag_20:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_22:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":927:928  b */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":923:924  a */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":923:928  a + b */\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":951:952  a */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":946:947  c */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n  lt\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_26\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_26:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1002:1003  c */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":995:1003  return c */\n  swap2\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Push.sol\":339:3747  contract Push is ERC20 {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_28\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_27)\ntag_28:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_27\n  jumpi\n  swap2\n  dup3\n  add\ntag_29:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_30\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_29)\ntag_30:\ntag_27:\n  pop\n  swap1\n  pop\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  pop\n  swap1\n  jump\t// out\ntag_32:\n  tag_33\n  swap2\n  swap1\ntag_34:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_35\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_34)\ntag_35:\n  pop\n  swap1\n  jump\ntag_33:\n  swap1\n  jump\t// out\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Push.sol\":339:3747  contract Push is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/Push.sol\":339:3747  contract Push is ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x48a3b4a4\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x48a3b4a4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2180:2261  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_18:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_18)\n    tag_20:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2180:2261  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_21\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_21:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4216:4382  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4216:4382  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3223:3321  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4842:5159  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4842:5159  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3082:3163  function decimals() public view returns (uint8) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5554:5769  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5554:5769  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Push.sol\":519:596  address public EPNS_COMM_ADDRESS = 0x87da9Af1899ad477C67FeA31ce89c1d2435c77DC */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3379:3496  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_10:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3379:3496  function balanceOf(address account) public view override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2374:2459  function symbol() public view returns (string memory) {... */\n    tag_11:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_42:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_42)\n    tag_44:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2374:2459  function symbol() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_45\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_45:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6256:6522  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6256:6522  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Push.sol\":740:2612  function transfer(address to, uint amount) override public returns (bool success) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"contracts/Push.sol\":740:2612  function transfer(address to, uint amount) override public returns (bool success) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3929:4078  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3929:4078  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2180:2261  function name() public view returns (string memory) {... */\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2217:2230  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2249:2254  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2242:2254  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_56\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_57\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_56)\n    tag_57:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_58:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_58\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2180:2261  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4216:4382  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4299:4303  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4315:4354  _approve(_msgSender(), spender, amount) */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4324:4336  _msgSender() */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4324:4334  _msgSender */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4324:4336  _msgSender() */\n      jump\t// in\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4338:4345  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4347:4353  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4315:4323  _approve */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4315:4354  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4371:4375  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4364:4375  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4216:4382  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3223:3321  function totalSupply() public view override returns (uint256) {... */\n    tag_26:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3276:3283  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3302:3314  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3295:3314  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3223:3321  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4842:5159  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_29:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4948:4952  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4964:5000  _transfer(sender, recipient, amount) */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4974:4980  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4982:4991  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4993:4999  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4964:4973  _transfer */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4964:5000  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5010:5131  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5019:5025  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5027:5039  _msgSender() */\n      tag_69\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5027:5037  _msgSender */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5027:5039  _msgSender() */\n      jump\t// in\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5130  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5079:5085  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5130  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5052  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5060  _allowances[sender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5053:5059  sender */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5060  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5074  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5061:5073  _msgSender() */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5061:5071  _msgSender */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5061:5073  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5074  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5078  _allowances[sender][_msgSender()].sub */\n      tag_72\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5130  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5010:5018  _approve */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5010:5131  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5148:5152  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5141:5152  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4842:5159  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3082:3163  function decimals() public view returns (uint8) {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3123:3128  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3147:3156  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3140:3156  return _decimals */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3082:3163  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5554:5769  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5642:5646  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5658:5741  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5667:5679  _msgSender() */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5667:5677  _msgSender */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5667:5679  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5681:5688  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5740  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5729:5739  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5701  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5715  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5715  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5724  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5724  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5728  _allowances[_msgSender()][spender].add */\n      tag_79\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5740  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5658:5666  _approve */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5658:5741  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5758:5762  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5751:5762  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5554:5769  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Push.sol\":519:596  address public EPNS_COMM_ADDRESS = 0x87da9Af1899ad477C67FeA31ce89c1d2435c77DC */\n    tag_36:\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3379:3496  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3445:3452  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3471:3480  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3471:3489  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3481:3488  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3471:3489  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3464:3489  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3379:3496  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2374:2459  function symbol() public view returns (string memory) {... */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2413:2426  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2445:2452  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2438:2452  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_82\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_83\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_82)\n    tag_83:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_84:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_84\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2374:2459  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6256:6522  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6349:6353  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6365:6494  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6374:6386  _msgSender() */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6374:6384  _msgSender */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6374:6386  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6388:6395  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6493  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6436:6451  subtractedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6493  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6408  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6422  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6422  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6431  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6431  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6435  _allowances[_msgSender()][spender].sub */\n      tag_72\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6493  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6365:6373  _approve */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6365:6494  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6511:6515  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6504:6515  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6256:6522  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Push.sol\":740:2612  function transfer(address to, uint amount) override public returns (bool success) {... */\n    tag_51:\n        /* \"contracts/Push.sol\":808:820  bool success */\n      0x00\n        /* \"contracts/Push.sol\":832:845  address owner */\n      dup1\n        /* \"contracts/Push.sol\":848:860  _msgSender() */\n      tag_91\n        /* \"contracts/Push.sol\":848:858  _msgSender */\n      tag_62\n        /* \"contracts/Push.sol\":848:860  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"contracts/Push.sol\":832:860  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Push.sol\":870:898  _transfer(owner, to, amount) */\n      tag_92\n        /* \"contracts/Push.sol\":880:885  owner */\n      dup2\n        /* \"contracts/Push.sol\":887:889  to */\n      dup6\n        /* \"contracts/Push.sol\":891:897  amount */\n      dup6\n        /* \"contracts/Push.sol\":870:879  _transfer */\n      tag_67\n        /* \"contracts/Push.sol\":870:898  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/Push.sol\":1006:1023  EPNS_COMM_ADDRESS */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Push.sol\":987:1041  IPUSHCommInterface(EPNS_COMM_ADDRESS).sendNotification */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xba3d69d7\n        /* \"contracts/Push.sol\":1055:1097  0x050Ca75E3957c37dDF26D58046d8F9967B88190c */\n      0x050ca75e3957c37ddf26d58046d8f9967b88190c\n        /* \"contracts/Push.sol\":1127:1129  to */\n      dup7\n        /* \"contracts/Push.sol\":2252:2279  addressToString(msg.sender) */\n      tag_93\n        /* \"contracts/Push.sol\":2268:2278  msg.sender */\n      caller\n        /* \"contracts/Push.sol\":2252:2267  addressToString */\n      tag_94\n        /* \"contracts/Push.sol\":2252:2279  addressToString(msg.sender) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/Push.sol\":1525:2533  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      dup1\n      dup1\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x01\n      add\n      dup1\n      0x2b00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x01\n      add\n      dup1\n      0x3300000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x01\n      add\n      dup1\n      0x2b00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x01\n      add\n      dup1\n      0x5472616e66657220416c65727400000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x0d\n      add\n      dup1\n      0x2b00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x01\n      add\n      dup1\n      0x486f6f7261792120000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x08\n      add\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_95:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_95)\n    tag_97:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/Push.sol\":1525:2533  abi.encodePacked(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup1\n      0x2073656e74200000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x06\n      add\n      dup1\n      0x205055534820746f20796f752100000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x0d\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/Push.sol\":1525:2533  abi.encodePacked(... */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Push.sol\":987:2575  IPUSHCommInterface(EPNS_COMM_ADDRESS).sendNotification(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_98:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_98)\n    tag_100:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/Push.sol\":987:2575  IPUSHCommInterface(EPNS_COMM_ADDRESS).sendNotification(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_101:\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_102:\n        /* \"contracts/Push.sol\":987:2575  IPUSHCommInterface(EPNS_COMM_ADDRESS).sendNotification(... */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_104\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_104:\n        /* \"contracts/Push.sol\":987:2575  IPUSHCommInterface(EPNS_COMM_ADDRESS).sendNotification(... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Push.sol\":2601:2605  true */\n      0x01\n        /* \"contracts/Push.sol\":2594:2605  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Push.sol\":740:2612  function transfer(address to, uint amount) override public returns (bool success) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3929:4078  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4018:4025  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4044:4055  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4044:4062  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4056:4061  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4044:4062  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4044:4071  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4063:4070  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4044:4071  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4037:4071  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3929:4078  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":735:839  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":788:803  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":822:832  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":815:832  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":735:839  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9320:9660  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9438:9439  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9421:9440  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9421:9426  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9421:9440  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9413:9481  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9518:9519  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9499:9520  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9499:9506  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9499:9520  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9491:9559  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9600:9606  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9581  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9588  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9582:9587  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9588  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9597  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9589:9596  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9597  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9606  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9637:9644  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9621:9653  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9630:9635  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9621:9653  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9646:9652  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9621:9653  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9320:9660  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6996:7526  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7119:7120  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7101:7121  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7101:7107  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7101:7121  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7093:7163  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7202:7203  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7181:7204  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7181:7190  recipient */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7181:7204  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7173:7244  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7255:7302  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7276:7282  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7284:7293  recipient */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7295:7301  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7255:7275  _beforeTokenTransfer */\n      tag_114\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7255:7302  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7404  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_115\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7355:7361  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7404  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7342  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7350  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7343:7349  sender */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7350  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7354  _balances[sender].sub */\n      tag_72\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7404  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_115:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7313:7322  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7313:7330  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7323:7329  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7313:7330  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7313:7404  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7469  _balances[recipient].add(amount) */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7462:7468  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7446  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7457  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7447:7456  recipient */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7457  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7461  _balances[recipient].add */\n      tag_79\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7469  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7414:7423  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7414:7434  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7424:7433  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7414:7434  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7414:7469  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7501:7510  recipient */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7484:7519  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7493:7499  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7484:7519  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7512:7518  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7484:7519  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6996:7526  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1778:1785  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1810:1811  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1805:1806  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1805:1811  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1813:1825  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1797:1826  require(b <= a, errorMessage) */\n      swap1\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_119:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_119)\n    tag_121:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1797:1826  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_122\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_122:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1836:1845  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1852:1853  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1848:1849  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1848:1853  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1836:1853  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1871:1872  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1864:1872  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Push.sol\":2670:3171  function addressToString(address _address) internal pure returns(string memory) {... */\n    tag_94:\n        /* \"contracts/Push.sol\":2735:2748  string memory */\n      0x60\n        /* \"contracts/Push.sol\":2760:2774  bytes32 _bytes */\n      0x00\n        /* \"contracts/Push.sol\":2801:2809  _address */\n      dup3\n        /* \"contracts/Push.sol\":2785:2811  uint256(uint160(_address)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Push.sol\":2777:2812  bytes32(uint256(uint160(_address))) */\n      0x00\n      shl\n        /* \"contracts/Push.sol\":2760:2812  bytes32 _bytes = bytes32(uint256(uint160(_address))) */\n      swap1\n      pop\n        /* \"contracts/Push.sol\":2822:2838  bytes memory HEX */\n      0x60\n        /* \"contracts/Push.sol\":2822:2859  bytes memory HEX = \"0123456789abcdef\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      0x3031323334353637383961626364656600000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/Push.sol\":2869:2889  bytes memory _string */\n      0x60\n        /* \"contracts/Push.sol\":2902:2904  42 */\n      0x2a\n        /* \"contracts/Push.sol\":2892:2905  new bytes(42) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":116:120   */\n      dup1\n        /* \"--CODEGEN--\":104:114   */\n      codesize\n        /* \"--CODEGEN--\":96:102   */\n      dup4\n        /* \"--CODEGEN--\":87:121   */\n      codecopy\n        /* \"--CODEGEN--\":147:151   */\n      dup1\n        /* \"--CODEGEN--\":139:145   */\n      dup3\n        /* \"--CODEGEN--\":135:152   */\n      add\n        /* \"--CODEGEN--\":125:152   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:156   */\n      pop\n        /* \"contracts/Push.sol\":2892:2905  new bytes(42) */\n      swap1\n      pop\n    tag_126:\n      pop\n        /* \"contracts/Push.sol\":2869:2905  bytes memory _string = new bytes(42) */\n      swap1\n      pop\n        /* \"contracts/Push.sol\":2915:2931  _string[0] = '0' */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Push.sol\":2915:2922  _string */\n      dup2\n        /* \"contracts/Push.sol\":2923:2924  0 */\n      0x00\n        /* \"contracts/Push.sol\":2915:2925  _string[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_127\n      jumpi\n      invalid\n    tag_127:\n      0x20\n      add\n      add\n        /* \"contracts/Push.sol\":2915:2931  _string[0] = '0' */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/Push.sol\":2941:2957  _string[1] = 'x' */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Push.sol\":2941:2948  _string */\n      dup2\n        /* \"contracts/Push.sol\":2949:2950  1 */\n      0x01\n        /* \"contracts/Push.sol\":2941:2951  _string[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_128\n      jumpi\n      invalid\n    tag_128:\n      0x20\n      add\n      add\n        /* \"contracts/Push.sol\":2941:2957  _string[1] = 'x' */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/Push.sol\":2971:2977  uint i */\n      0x00\n        /* \"contracts/Push.sol\":2980:2981  0 */\n      dup1\n        /* \"contracts/Push.sol\":2971:2981  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/Push.sol\":2967:3133  for(uint i = 0; i < 20; i++) {... */\n    tag_129:\n        /* \"contracts/Push.sol\":2987:2989  20 */\n      0x14\n        /* \"contracts/Push.sol\":2983:2984  i */\n      dup2\n        /* \"contracts/Push.sol\":2983:2989  i < 20 */\n      lt\n        /* \"contracts/Push.sol\":2967:3133  for(uint i = 0; i < 20; i++) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/Push.sol\":3027:3030  HEX */\n      dup3\n        /* \"contracts/Push.sol\":3055:3056  4 */\n      0x04\n        /* \"contracts/Push.sol\":3037:3043  _bytes */\n      dup6\n        /* \"contracts/Push.sol\":3048:3050  12 */\n      0x0c\n        /* \"contracts/Push.sol\":3044:3045  i */\n      dup5\n        /* \"contracts/Push.sol\":3044:3050  i + 12 */\n      add\n        /* \"contracts/Push.sol\":3037:3051  _bytes[i + 12] */\n      0x20\n      dup2\n      lt\n      tag_132\n      jumpi\n      invalid\n    tag_132:\n      byte\n      0xf8\n      shl\n        /* \"contracts/Push.sol\":3037:3056  _bytes[i + 12] >> 4 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      shr\n        /* \"contracts/Push.sol\":3031:3057  uint8(_bytes[i + 12] >> 4) */\n      0xf8\n      shr\n        /* \"contracts/Push.sol\":3027:3058  HEX[uint8(_bytes[i + 12] >> 4)] */\n      0xff\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      invalid\n    tag_133:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/Push.sol\":3010:3017  _string */\n      dup3\n        /* \"contracts/Push.sol\":3022:3023  2 */\n      0x02\n        /* \"contracts/Push.sol\":3020:3021  i */\n      dup4\n        /* \"contracts/Push.sol\":3020:3023  i*2 */\n      mul\n        /* \"contracts/Push.sol\":3018:3019  2 */\n      0x02\n        /* \"contracts/Push.sol\":3018:3023  2+i*2 */\n      add\n        /* \"contracts/Push.sol\":3010:3024  _string[2+i*2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      invalid\n    tag_134:\n      0x20\n      add\n      add\n        /* \"contracts/Push.sol\":3010:3058  _string[2+i*2] = HEX[uint8(_bytes[i + 12] >> 4)] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/Push.sol\":3089:3092  HEX */\n      dup3\n        /* \"contracts/Push.sol\":3116:3120  0x0f */\n      0x0f\n        /* \"contracts/Push.sol\":3099:3120  _bytes[i + 12] & 0x0f */\n      0xf8\n      shl\n        /* \"contracts/Push.sol\":3099:3105  _bytes */\n      dup6\n        /* \"contracts/Push.sol\":3110:3112  12 */\n      0x0c\n        /* \"contracts/Push.sol\":3106:3107  i */\n      dup5\n        /* \"contracts/Push.sol\":3106:3112  i + 12 */\n      add\n        /* \"contracts/Push.sol\":3099:3113  _bytes[i + 12] */\n      0x20\n      dup2\n      lt\n      tag_135\n      jumpi\n      invalid\n    tag_135:\n      byte\n      0xf8\n      shl\n        /* \"contracts/Push.sol\":3099:3120  _bytes[i + 12] & 0x0f */\n      and\n        /* \"contracts/Push.sol\":3093:3121  uint8(_bytes[i + 12] & 0x0f) */\n      0xf8\n      shr\n        /* \"contracts/Push.sol\":3089:3122  HEX[uint8(_bytes[i + 12] & 0x0f)] */\n      0xff\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_136\n      jumpi\n      invalid\n    tag_136:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/Push.sol\":3072:3079  _string */\n      dup3\n        /* \"contracts/Push.sol\":3084:3085  2 */\n      0x02\n        /* \"contracts/Push.sol\":3082:3083  i */\n      dup4\n        /* \"contracts/Push.sol\":3082:3085  i*2 */\n      mul\n        /* \"contracts/Push.sol\":3080:3081  3 */\n      0x03\n        /* \"contracts/Push.sol\":3080:3085  3+i*2 */\n      add\n        /* \"contracts/Push.sol\":3072:3086  _string[3+i*2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_137\n      jumpi\n      invalid\n    tag_137:\n      0x20\n      add\n      add\n        /* \"contracts/Push.sol\":3072:3122  _string[3+i*2] = HEX[uint8(_bytes[i + 12] & 0x0f)] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/Push.sol\":2991:2994  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Push.sol\":2967:3133  for(uint i = 0; i < 20; i++) {... */\n      jump(tag_129)\n    tag_130:\n      pop\n        /* \"contracts/Push.sol\":3156:3163  _string */\n      dup1\n        /* \"contracts/Push.sol\":3142:3164  return string(_string) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Push.sol\":2670:3171  function addressToString(address _address) internal pure returns(string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":10658:10750  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_114:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212204cf7153d6eb1d67a524755084c2eeec48ea9d4058113f7ff6d24c6da6234b9cd64736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040527387da9af1899ad477c67fea31ce89c1d2435c77dc600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b506040518060400160405280600a81526020017f5075736820546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f50555348000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000eb929190620003d7565b50806004908051906020019062000104929190620003d7565b506012600560006101000a81548160ff021916908360ff16021790555050506200014e33620001386200015460201b60201c565b60ff16600a0a6103e8026200016b60201b60201c565b62000486565b6000600560009054906101000a900460ff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b62000223600083836200034960201b60201c565b6200023f816002546200034e60201b620012f51790919060201c565b6002819055506200029d816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200034e60201b620012f51790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600080828401905083811015620003cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200041a57805160ff19168380011785556200044b565b828001600101855582156200044b579182015b828111156200044a5782518255916020019190600101906200042d565b5b5090506200045a91906200045e565b5090565b6200048391905b808211156200047f57600081600090555060010162000465565b5090565b90565b61173a80620004966000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806348a3b4a41161007157806348a3b4a4146102d057806370a082311461031a57806395d89b4114610372578063a457c2d7146103f5578063a9059cbb1461045b578063dd62ed3e146104c1576100b4565b806306fdde03146100b9578063095ea7b31461013c57806318160ddd146101a257806323b872dd146101c0578063313ce56714610246578063395093511461026a575b600080fd5b6100c1610539565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101886004803603604081101561015257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105db565b604051808215151515815260200191505060405180910390f35b6101aa6105f9565b6040518082815260200191505060405180910390f35b61022c600480360360608110156101d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610603565b604051808215151515815260200191505060405180910390f35b61024e6106dc565b604051808260ff1660ff16815260200191505060405180910390f35b6102b66004803603604081101561028057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f3565b604051808215151515815260200191505060405180910390f35b6102d86107a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61035c6004803603602081101561033057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107cc565b6040518082815260200191505060405180910390f35b61037a610814565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103ba57808201518184015260208101905061039f565b50505050905090810190601f1680156103e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104416004803603604081101561040b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108b6565b604051808215151515815260200191505060405180910390f35b6104a76004803603604081101561047157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610983565b604051808215151515815260200191505060405180910390f35b610523600480360360408110156104d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cee565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105d15780601f106105a6576101008083540402835291602001916105d1565b820191906000526020600020905b8154815290600101906020018083116105b457829003601f168201915b5050505050905090565b60006105ef6105e8610d75565b8484610d7d565b6001905092915050565b6000600254905090565b6000610610848484610f74565b6106d18461061c610d75565b6106cc8560405180606001604052806028815260200161166f60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610682610d75565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112359092919063ffffffff16565b610d7d565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061079c610700610d75565b846107978560016000610711610d75565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112f590919063ffffffff16565b610d7d565b6001905092915050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108ac5780601f10610881576101008083540402835291602001916108ac565b820191906000526020600020905b81548152906001019060200180831161088f57829003601f168201915b5050505050905090565b60006109796108c3610d75565b84610974856040518060600160405280602581526020016116e060259139600160006108ed610d75565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112359092919063ffffffff16565b610d7d565b6001905092915050565b60008061098e610d75565b905061099b818585610f74565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba3d69d773050ca75e3957c37ddf26d58046d8f9967b88190c866109f83361137d565b60405160200180807f3000000000000000000000000000000000000000000000000000000000000000815250600101807f2b00000000000000000000000000000000000000000000000000000000000000815250600101807f3300000000000000000000000000000000000000000000000000000000000000815250600101807f2b00000000000000000000000000000000000000000000000000000000000000815250600101807f5472616e66657220416c65727400000000000000000000000000000000000000815250600d01807f2b00000000000000000000000000000000000000000000000000000000000000815250600101807f486f6f726179212000000000000000000000000000000000000000000000000081525060080182805190602001908083835b60208310610b465780518252602082019150602081019050602083039250610b23565b6001836020036101000a038019825116818451168082178552505050505050905001807f2073656e74200000000000000000000000000000000000000000000000000000815250600601807f205055534820746f20796f752100000000000000000000000000000000000000815250600d019150506040516020818303038152906040526040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610c7d578082015181840152602081019050610c62565b50505050905090810190601f168015610caa5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610ccb57600080fd5b505af1158015610cdf573d6000803e3d6000fd5b50505050600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806116bc6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e89576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806116276022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ffa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806116976025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611080576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806116046023913960400191505060405180910390fd5b61108b8383836115fe565b6110f681604051806060016040528060268152602001611649602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112359092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611189816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112f590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906112e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112a757808201518184015260208101905061128c565b50505050905090810190601f1680156112d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b606060008273ffffffffffffffffffffffffffffffffffffffff1660001b905060606040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506060602a6040519080825280601f01601f19166020018201604052801561140d5781602001600182028038833980820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061143e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061149b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060008090505b60148110156115f25782600485600c8401602081106114eb57fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60f81c60ff168151811061152357fe5b602001015160f81c60f81b82600283026002018151811061154057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082600f60f81b85600c84016020811061158457fe5b1a60f81b1660f81c60ff168151811061159957fe5b602001015160f81c60f81b8260028302600301815181106115b657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506114d0565b50809350505050919050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204cf7153d6eb1d67a524755084c2eeec48ea9d4058113f7ff6d24c6da6234b9cd64736f6c63430006020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x87DA9AF1899AD477C67FEA31CE89C1D2435C77DC PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5075736820546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5055534800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xEB SWAP3 SWAP2 SWAP1 PUSH3 0x3D7 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x104 SWAP3 SWAP2 SWAP1 PUSH3 0x3D7 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x14E CALLER PUSH3 0x138 PUSH3 0x154 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA EXP PUSH2 0x3E8 MUL PUSH3 0x16B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x486 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x20F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x223 PUSH1 0x0 DUP4 DUP4 PUSH3 0x349 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x23F DUP2 PUSH1 0x2 SLOAD PUSH3 0x34E PUSH1 0x20 SHL PUSH3 0x12F5 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x29D DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x34E PUSH1 0x20 SHL PUSH3 0x12F5 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH3 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x41A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x44B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x44B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x44A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x42D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x45A SWAP2 SWAP1 PUSH3 0x45E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x483 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x47F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x465 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x173A DUP1 PUSH3 0x496 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x48A3B4A4 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x48A3B4A4 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4C1 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x101 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x12E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x523 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x5D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EF PUSH2 0x5E8 PUSH2 0xD75 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x610 DUP5 DUP5 DUP5 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x6D1 DUP5 PUSH2 0x61C PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x6CC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166F PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x682 PUSH2 0xD75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1235 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79C PUSH2 0x700 PUSH2 0xD75 JUMP JUMPDEST DUP5 PUSH2 0x797 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x711 PUSH2 0xD75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x8AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x881 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x979 PUSH2 0x8C3 PUSH2 0xD75 JUMP JUMPDEST DUP5 PUSH2 0x974 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E0 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x8ED PUSH2 0xD75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1235 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x98E PUSH2 0xD75 JUMP JUMPDEST SWAP1 POP PUSH2 0x99B DUP2 DUP6 DUP6 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBA3D69D7 PUSH20 0x50CA75E3957C37DDF26D58046D8F9967B88190C DUP7 PUSH2 0x9F8 CALLER PUSH2 0x137D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP1 PUSH32 0x2B00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP1 PUSH32 0x3300000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP1 PUSH32 0x2B00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP1 PUSH32 0x5472616E66657220416C65727400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xD ADD DUP1 PUSH32 0x2B00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP1 PUSH32 0x486F6F7261792120000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB46 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP1 PUSH32 0x2073656E74200000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 ADD DUP1 PUSH32 0x205055534820746F20796F752100000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xD ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC7D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC62 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xCAA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16BC PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1627 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1697 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1604 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108B DUP4 DUP4 DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x10F6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1649 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1235 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1189 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12A7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x128C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x12D4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1373 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x60 PUSH1 0x2A PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x140D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x143E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x149B JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0x15F2 JUMPI DUP3 PUSH1 0x4 DUP6 PUSH1 0xC DUP5 ADD PUSH1 0x20 DUP2 LT PUSH2 0x14EB JUMPI INVALID JUMPDEST BYTE PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x1523 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 MUL PUSH1 0x2 ADD DUP2 MLOAD DUP2 LT PUSH2 0x1540 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP3 PUSH1 0xF PUSH1 0xF8 SHL DUP6 PUSH1 0xC DUP5 ADD PUSH1 0x20 DUP2 LT PUSH2 0x1584 JUMPI INVALID JUMPDEST BYTE PUSH1 0xF8 SHL AND PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x1599 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 MUL PUSH1 0x3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x15B6 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x14D0 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212204CF7 ISZERO RETURNDATASIZE PUSH15 0xB1D67A524755084C2EEEC48EA9D405 DUP2 SGT 0xF7 SELFDESTRUCT PUSH14 0x24C6DA6234B9CD64736F6C634300 MOD MUL STOP CALLER ",
							"sourceMap": "339:3408:0:-:0;;;554:42;519:77;;;;;;;;;;;;;;;;;;;;603:131;8:9:-1;5:2;;;30:1;27;20:12;5:2;603:131:0;1974:141:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:4;2046:5;:12;;;;;;;;;;;;:::i;:::-;;2078:6;2068:7;:16;;;;;;;;;;;;:::i;:::-;;2106:2;2094:9;;:14;;;;;;;;;;;;;;;;;;1974:141;;679:48:0::1;685:10;715;:8;;;:10;;:::i;:::-;710:16;;704:2;:22;697:4;:29;679:5;;;:48;;:::i;:::-;339:3408:::0;;3082:81:3;3123:5;3147:9;;;;;;;;;;;3140:16;;3082:81;:::o;7796:370::-;7898:1;7879:21;;:7;:21;;;;7871:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7947:49;7976:1;7980:7;7989:6;7947:20;;;:49;;:::i;:::-;8022:24;8039:6;8022:12;;:16;;;;;;:24;;;;:::i;:::-;8007:12;:39;;;;8077:30;8100:6;8077:9;:18;8087:7;8077:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8056:9;:18;8066:7;8056:18;;;;;;;;;;;;;;;:51;;;;8143:7;8122:37;;8139:1;8122:37;;;8152:6;8122:37;;;;;;;;;;;;;;;;;;7796:370;;:::o;10658:92::-;;;;:::o;834:176:2:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;339:3408:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806348a3b4a41161007157806348a3b4a4146102d057806370a082311461031a57806395d89b4114610372578063a457c2d7146103f5578063a9059cbb1461045b578063dd62ed3e146104c1576100b4565b806306fdde03146100b9578063095ea7b31461013c57806318160ddd146101a257806323b872dd146101c0578063313ce56714610246578063395093511461026a575b600080fd5b6100c1610539565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101015780820151818401526020810190506100e6565b50505050905090810190601f16801561012e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101886004803603604081101561015257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105db565b604051808215151515815260200191505060405180910390f35b6101aa6105f9565b6040518082815260200191505060405180910390f35b61022c600480360360608110156101d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610603565b604051808215151515815260200191505060405180910390f35b61024e6106dc565b604051808260ff1660ff16815260200191505060405180910390f35b6102b66004803603604081101561028057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f3565b604051808215151515815260200191505060405180910390f35b6102d86107a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61035c6004803603602081101561033057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107cc565b6040518082815260200191505060405180910390f35b61037a610814565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103ba57808201518184015260208101905061039f565b50505050905090810190601f1680156103e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104416004803603604081101561040b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108b6565b604051808215151515815260200191505060405180910390f35b6104a76004803603604081101561047157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610983565b604051808215151515815260200191505060405180910390f35b610523600480360360408110156104d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cee565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105d15780601f106105a6576101008083540402835291602001916105d1565b820191906000526020600020905b8154815290600101906020018083116105b457829003601f168201915b5050505050905090565b60006105ef6105e8610d75565b8484610d7d565b6001905092915050565b6000600254905090565b6000610610848484610f74565b6106d18461061c610d75565b6106cc8560405180606001604052806028815260200161166f60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610682610d75565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112359092919063ffffffff16565b610d7d565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061079c610700610d75565b846107978560016000610711610d75565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112f590919063ffffffff16565b610d7d565b6001905092915050565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108ac5780601f10610881576101008083540402835291602001916108ac565b820191906000526020600020905b81548152906001019060200180831161088f57829003601f168201915b5050505050905090565b60006109796108c3610d75565b84610974856040518060600160405280602581526020016116e060259139600160006108ed610d75565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112359092919063ffffffff16565b610d7d565b6001905092915050565b60008061098e610d75565b905061099b818585610f74565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ba3d69d773050ca75e3957c37ddf26d58046d8f9967b88190c866109f83361137d565b60405160200180807f3000000000000000000000000000000000000000000000000000000000000000815250600101807f2b00000000000000000000000000000000000000000000000000000000000000815250600101807f3300000000000000000000000000000000000000000000000000000000000000815250600101807f2b00000000000000000000000000000000000000000000000000000000000000815250600101807f5472616e66657220416c65727400000000000000000000000000000000000000815250600d01807f2b00000000000000000000000000000000000000000000000000000000000000815250600101807f486f6f726179212000000000000000000000000000000000000000000000000081525060080182805190602001908083835b60208310610b465780518252602082019150602081019050602083039250610b23565b6001836020036101000a038019825116818451168082178552505050505050905001807f2073656e74200000000000000000000000000000000000000000000000000000815250600601807f205055534820746f20796f752100000000000000000000000000000000000000815250600d019150506040516020818303038152906040526040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610c7d578082015181840152602081019050610c62565b50505050905090810190601f168015610caa5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610ccb57600080fd5b505af1158015610cdf573d6000803e3d6000fd5b50505050600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806116bc6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e89576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806116276022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ffa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806116976025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611080576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806116046023913960400191505060405180910390fd5b61108b8383836115fe565b6110f681604051806060016040528060268152602001611649602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112359092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611189816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112f590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906112e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112a757808201518184015260208101905061128c565b50505050905090810190601f1680156112d45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b606060008273ffffffffffffffffffffffffffffffffffffffff1660001b905060606040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506060602a6040519080825280601f01601f19166020018201604052801561140d5781602001600182028038833980820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061143e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061149b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060008090505b60148110156115f25782600485600c8401602081106114eb57fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60f81c60ff168151811061152357fe5b602001015160f81c60f81b82600283026002018151811061154057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082600f60f81b85600c84016020811061158457fe5b1a60f81b1660f81c60ff168151811061159957fe5b602001015160f81c60f81b8260028302600301815181106115b657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506114d0565b50809350505050919050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204cf7153d6eb1d67a524755084c2eeec48ea9d4058113f7ff6d24c6da6234b9cd64736f6c63430006020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x48A3B4A4 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x48A3B4A4 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4C1 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x101 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x12E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x523 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x5D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EF PUSH2 0x5E8 PUSH2 0xD75 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x610 DUP5 DUP5 DUP5 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0x6D1 DUP5 PUSH2 0x61C PUSH2 0xD75 JUMP JUMPDEST PUSH2 0x6CC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166F PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x682 PUSH2 0xD75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1235 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79C PUSH2 0x700 PUSH2 0xD75 JUMP JUMPDEST DUP5 PUSH2 0x797 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x711 PUSH2 0xD75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x8AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x881 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x979 PUSH2 0x8C3 PUSH2 0xD75 JUMP JUMPDEST DUP5 PUSH2 0x974 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E0 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x8ED PUSH2 0xD75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1235 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x98E PUSH2 0xD75 JUMP JUMPDEST SWAP1 POP PUSH2 0x99B DUP2 DUP6 DUP6 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBA3D69D7 PUSH20 0x50CA75E3957C37DDF26D58046D8F9967B88190C DUP7 PUSH2 0x9F8 CALLER PUSH2 0x137D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP1 PUSH32 0x2B00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP1 PUSH32 0x3300000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP1 PUSH32 0x2B00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP1 PUSH32 0x5472616E66657220416C65727400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xD ADD DUP1 PUSH32 0x2B00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 ADD DUP1 PUSH32 0x486F6F7261792120000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB46 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP1 PUSH32 0x2073656E74200000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 ADD DUP1 PUSH32 0x205055534820746F20796F752100000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xD ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC7D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC62 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xCAA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16BC PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1627 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1697 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1604 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108B DUP4 DUP4 DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x10F6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1649 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1235 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1189 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12A7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x128C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x12D4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1373 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL SWAP1 POP PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x60 PUSH1 0x2A PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x140D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x143E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x149B JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x14 DUP2 LT ISZERO PUSH2 0x15F2 JUMPI DUP3 PUSH1 0x4 DUP6 PUSH1 0xC DUP5 ADD PUSH1 0x20 DUP2 LT PUSH2 0x14EB JUMPI INVALID JUMPDEST BYTE PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x1523 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 MUL PUSH1 0x2 ADD DUP2 MLOAD DUP2 LT PUSH2 0x1540 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP3 PUSH1 0xF PUSH1 0xF8 SHL DUP6 PUSH1 0xC DUP5 ADD PUSH1 0x20 DUP2 LT PUSH2 0x1584 JUMPI INVALID JUMPDEST BYTE PUSH1 0xF8 SHL AND PUSH1 0xF8 SHR PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x1599 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 PUSH1 0x2 DUP4 MUL PUSH1 0x3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x15B6 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x14D0 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212204CF7 ISZERO RETURNDATASIZE PUSH15 0xB1D67A524755084C2EEEC48EA9D405 DUP2 SGT 0xF7 SELFDESTRUCT PUSH14 0x24C6DA6234B9CD64736F6C634300 MOD MUL STOP CALLER ",
							"sourceMap": "339:3408:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;339:3408:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:81:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2180:81:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4216:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4216:166:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3223:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4842:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4842:317:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3082:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5554:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5554:215:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;519:77:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3379:117:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3379:117:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2374:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2374:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6256:266;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6256:266:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;740:1872:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;740:1872:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3929:149:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3929:149:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2180:81;2217:13;2249:5;2242:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:81;:::o;4216:166::-;4299:4;4315:39;4324:12;:10;:12::i;:::-;4338:7;4347:6;4315:8;:39::i;:::-;4371:4;4364:11;;4216:166;;;;:::o;3223:98::-;3276:7;3302:12;;3295:19;;3223:98;:::o;4842:317::-;4948:4;4964:36;4974:6;4982:9;4993:6;4964:9;:36::i;:::-;5010:121;5019:6;5027:12;:10;:12::i;:::-;5041:89;5079:6;5041:89;;;;;;;;;;;;;;;;;:11;:19;5053:6;5041:19;;;;;;;;;;;;;;;:33;5061:12;:10;:12::i;:::-;5041:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5010:8;:121::i;:::-;5148:4;5141:11;;4842:317;;;;;:::o;3082:81::-;3123:5;3147:9;;;;;;;;;;;3140:16;;3082:81;:::o;5554:215::-;5642:4;5658:83;5667:12;:10;:12::i;:::-;5681:7;5690:50;5729:10;5690:11;:25;5702:12;:10;:12::i;:::-;5690:25;;;;;;;;;;;;;;;:34;5716:7;5690:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5658:8;:83::i;:::-;5758:4;5751:11;;5554:215;;;;:::o;519:77:0:-;;;;;;;;;;;;;:::o;3379:117:3:-;3445:7;3471:9;:18;3481:7;3471:18;;;;;;;;;;;;;;;;3464:25;;3379:117;;;:::o;2374:85::-;2413:13;2445:7;2438:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2374:85;:::o;6256:266::-;6349:4;6365:129;6374:12;:10;:12::i;:::-;6388:7;6397:96;6436:15;6397:96;;;;;;;;;;;;;;;;;:11;:25;6409:12;:10;:12::i;:::-;6397:25;;;;;;;;;;;;;;;:34;6423:7;6397:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6365:8;:129::i;:::-;6511:4;6504:11;;6256:266;;;;:::o;740:1872:0:-;808:12;832:13;848:12;:10;:12::i;:::-;832:28;;870;880:5;887:2;891:6;870:9;:28::i;:::-;1006:17;;;;;;;;;;;987:54;;;1055:42;1127:2;2252:27;2268:10;2252:15;:27::i;:::-;1525:1008;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1525:1008:0;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1525:1008:0;;;987:1588;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;987:1588:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;987:1588:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;987:1588:0;;;;2601:4;2594:11;;;740:1872;;;;:::o;3929:149:3:-;4018:7;4044:11;:18;4056:5;4044:18;;;;;;;;;;;;;;;:27;4063:7;4044:27;;;;;;;;;;;;;;;;4037:34;;3929:149;;;;:::o;735:104:1:-;788:15;822:10;815:17;;735:104;:::o;9320:340:3:-;9438:1;9421:19;;:5;:19;;;;9413:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9518:1;9499:21;;:7;:21;;;;9491:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9600:6;9570:11;:18;9582:5;9570:18;;;;;;;;;;;;;;;:27;9589:7;9570:27;;;;;;;;;;;;;;;:36;;;;9637:7;9621:32;;9630:5;9621:32;;;9646:6;9621:32;;;;;;;;;;;;;;;;;;9320:340;;;:::o;6996:530::-;7119:1;7101:20;;:6;:20;;;;7093:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7202:1;7181:23;;:9;:23;;;;7173:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7255:47;7276:6;7284:9;7295:6;7255:20;:47::i;:::-;7333:71;7355:6;7333:71;;;;;;;;;;;;;;;;;:9;:17;7343:6;7333:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7313:9;:17;7323:6;7313:17;;;;;;;;;;;;;;;:91;;;;7437:32;7462:6;7437:9;:20;7447:9;7437:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7414:9;:20;7424:9;7414:20;;;;;;;;;;;;;;;:55;;;;7501:9;7484:35;;7493:6;7484:35;;;7512:6;7484:35;;;;;;;;;;;;;;;;;;6996:530;;;:::o;1692:187:2:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1797:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;2670:501:0:-;2735:13;2760:14;2801:8;2785:26;;2777:35;;2760:52;;2822:16;:37;;;;;;;;;;;;;;;;;;;2869:20;2902:2;2892:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;2892:13:0;;;;2869:36;;2915:16;:7;2923:1;2915:10;;;;;;;;;;;:16;;;;;;;;;;;2941;:7;2949:1;2941:10;;;;;;;;;;;:16;;;;;;;;;;;2971:6;2980:1;2971:10;;2967:166;2987:2;2983:1;:6;2967:166;;;3027:3;3055:1;3037:6;3048:2;3044:1;:6;3037:14;;;;;;;;;;:19;;;;;3031:26;;3027:31;;;;;;;;;;;;;;;;;;3010:7;3022:1;3020;:3;3018:1;:5;3010:14;;;;;;;;;;;:48;;;;;;;;;;;3089:3;3116:4;3099:21;;:6;3110:2;3106:1;:6;3099:14;;;;;;;;;;:21;3093:28;;3089:33;;;;;;;;;;;;;;;;;;3072:7;3084:1;3082;:3;3080:1;:5;3072:14;;;;;;;;;;;:50;;;;;;;;;;;2991:3;;;;;;;2967:166;;;;3156:7;3142:22;;;;;2670:501;;;:::o;10658:92:3:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1189200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"EPNS_COMM_ADDRESS()": "1103",
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1150",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"addressToString(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "MSTORE"
								},
								{
									"begin": 554,
									"end": 596,
									"name": "PUSH",
									"value": "87DA9AF1899AD477C67FEA31CE89C1D2435C77DC"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "EXP"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "DUP2"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "SLOAD"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "DUP2"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "MUL"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "NOT"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "AND"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "SWAP1"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "DUP4"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "AND"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "MUL"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "OR"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "SWAP1"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "SSTORE"
								},
								{
									"begin": 519,
									"end": 596,
									"name": "POP"
								},
								{
									"begin": 603,
									"end": 734,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 603,
									"end": 734,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MLOAD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "5075736820546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MLOAD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "5055534800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "DUP2"
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP1"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "DUP1"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "MLOAD"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP1"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "ADD"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP1"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP3"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP2"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP1"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "JUMPDEST"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "POP"
								},
								{
									"begin": 2078,
									"end": 2084,
									"name": "DUP1"
								},
								{
									"begin": 2068,
									"end": 2075,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP1"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "DUP1"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "MLOAD"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP1"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "ADD"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP1"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP3"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP2"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP1"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "JUMPDEST"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "POP"
								},
								{
									"begin": 2106,
									"end": 2108,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 2094,
									"end": 2103,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2094,
									"end": 2103,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "EXP"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "DUP2"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "SLOAD"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "DUP2"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "MUL"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "NOT"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "AND"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "SWAP1"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "DUP4"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "AND"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "MUL"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "OR"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "SWAP1"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "SSTORE"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 679,
									"end": 727,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER"
								},
								{
									"begin": 715,
									"end": 725,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 715,
									"end": 723,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 715,
									"end": 723,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 715,
									"end": 723,
									"name": "SHL"
								},
								{
									"begin": 715,
									"end": 725,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 715,
									"end": 725,
									"name": "SHR"
								},
								{
									"begin": 715,
									"end": 725,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 715,
									"end": 725,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 715,
									"end": 725,
									"name": "JUMPDEST"
								},
								{
									"begin": 710,
									"end": 726,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 710,
									"end": 726,
									"name": "AND"
								},
								{
									"begin": 704,
									"end": 706,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 704,
									"end": 726,
									"name": "EXP"
								},
								{
									"begin": 697,
									"end": 701,
									"name": "PUSH",
									"value": "3E8"
								},
								{
									"begin": 697,
									"end": 726,
									"name": "MUL"
								},
								{
									"begin": 679,
									"end": 684,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 679,
									"end": 684,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 679,
									"end": 684,
									"name": "SHL"
								},
								{
									"begin": 679,
									"end": 727,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 679,
									"end": 727,
									"name": "SHR"
								},
								{
									"begin": 679,
									"end": 727,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 679,
									"end": 727,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 679,
									"end": 727,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMP"
								},
								{
									"begin": 3082,
									"end": 3163,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 3082,
									"end": 3163,
									"name": "JUMPDEST"
								},
								{
									"begin": 3123,
									"end": 3128,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "SWAP1"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "SLOAD"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "SWAP1"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "EXP"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "SWAP1"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "DIV"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 3147,
									"end": 3156,
									"name": "AND"
								},
								{
									"begin": 3140,
									"end": 3156,
									"name": "SWAP1"
								},
								{
									"begin": 3140,
									"end": 3156,
									"name": "POP"
								},
								{
									"begin": 3082,
									"end": 3163,
									"name": "SWAP1"
								},
								{
									"begin": 3082,
									"end": 3163,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 7796,
									"end": 8166,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 7796,
									"end": 8166,
									"name": "JUMPDEST"
								},
								{
									"begin": 7898,
									"end": 7899,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7879,
									"end": 7900,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7879,
									"end": 7900,
									"name": "AND"
								},
								{
									"begin": 7879,
									"end": 7886,
									"name": "DUP3"
								},
								{
									"begin": 7879,
									"end": 7900,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7879,
									"end": 7900,
									"name": "AND"
								},
								{
									"begin": 7879,
									"end": 7900,
									"name": "EQ"
								},
								{
									"begin": 7879,
									"end": 7900,
									"name": "ISZERO"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "JUMPI"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "MLOAD"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "DUP2"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "MSTORE"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "ADD"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "DUP1"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "DUP1"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "ADD"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "DUP3"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "DUP2"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "SUB"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "DUP3"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "MSTORE"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "DUP2"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "MSTORE"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "ADD"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "DUP1"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "PUSH",
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "DUP2"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "MSTORE"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "POP"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "ADD"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "SWAP2"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "POP"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "POP"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "MLOAD"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "DUP1"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "SWAP2"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "SUB"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "SWAP1"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "REVERT"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 7871,
									"end": 7936,
									"name": "JUMPDEST"
								},
								{
									"begin": 7947,
									"end": 7996,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 7976,
									"end": 7977,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7980,
									"end": 7987,
									"name": "DUP4"
								},
								{
									"begin": 7989,
									"end": 7995,
									"name": "DUP4"
								},
								{
									"begin": 7947,
									"end": 7967,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 7947,
									"end": 7967,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7947,
									"end": 7967,
									"name": "SHL"
								},
								{
									"begin": 7947,
									"end": 7996,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7947,
									"end": 7996,
									"name": "SHR"
								},
								{
									"begin": 7947,
									"end": 7996,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7947,
									"end": 7996,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 7947,
									"end": 7996,
									"name": "JUMPDEST"
								},
								{
									"begin": 8022,
									"end": 8046,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 8039,
									"end": 8045,
									"name": "DUP2"
								},
								{
									"begin": 8022,
									"end": 8034,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 8022,
									"end": 8034,
									"name": "SLOAD"
								},
								{
									"begin": 8022,
									"end": 8038,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 8022,
									"end": 8038,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8022,
									"end": 8038,
									"name": "SHL"
								},
								{
									"begin": 8022,
									"end": 8038,
									"name": "PUSH [tag]",
									"value": "18446744073709551695"
								},
								{
									"begin": 8022,
									"end": 8038,
									"name": "OR"
								},
								{
									"begin": 8022,
									"end": 8038,
									"name": "SWAP1"
								},
								{
									"begin": 8022,
									"end": 8046,
									"name": "SWAP2"
								},
								{
									"begin": 8022,
									"end": 8046,
									"name": "SWAP1"
								},
								{
									"begin": 8022,
									"end": 8046,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8022,
									"end": 8046,
									"name": "SHR"
								},
								{
									"begin": 8022,
									"end": 8046,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8022,
									"end": 8046,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 8022,
									"end": 8046,
									"name": "JUMPDEST"
								},
								{
									"begin": 8007,
									"end": 8019,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 8007,
									"end": 8046,
									"name": "DUP2"
								},
								{
									"begin": 8007,
									"end": 8046,
									"name": "SWAP1"
								},
								{
									"begin": 8007,
									"end": 8046,
									"name": "SSTORE"
								},
								{
									"begin": 8007,
									"end": 8046,
									"name": "POP"
								},
								{
									"begin": 8077,
									"end": 8107,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 8100,
									"end": 8106,
									"name": "DUP2"
								},
								{
									"begin": 8077,
									"end": 8086,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "DUP1"
								},
								{
									"begin": 8087,
									"end": 8094,
									"name": "DUP6"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "AND"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "AND"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "DUP2"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "MSTORE"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "ADD"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "SWAP1"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "DUP2"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "MSTORE"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "ADD"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "KECCAK256"
								},
								{
									"begin": 8077,
									"end": 8095,
									"name": "SLOAD"
								},
								{
									"begin": 8077,
									"end": 8099,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 8077,
									"end": 8099,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8077,
									"end": 8099,
									"name": "SHL"
								},
								{
									"begin": 8077,
									"end": 8099,
									"name": "PUSH [tag]",
									"value": "18446744073709551695"
								},
								{
									"begin": 8077,
									"end": 8099,
									"name": "OR"
								},
								{
									"begin": 8077,
									"end": 8099,
									"name": "SWAP1"
								},
								{
									"begin": 8077,
									"end": 8107,
									"name": "SWAP2"
								},
								{
									"begin": 8077,
									"end": 8107,
									"name": "SWAP1"
								},
								{
									"begin": 8077,
									"end": 8107,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8077,
									"end": 8107,
									"name": "SHR"
								},
								{
									"begin": 8077,
									"end": 8107,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8077,
									"end": 8107,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 8077,
									"end": 8107,
									"name": "JUMPDEST"
								},
								{
									"begin": 8056,
									"end": 8065,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "DUP1"
								},
								{
									"begin": 8066,
									"end": 8073,
									"name": "DUP5"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "AND"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "AND"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "DUP2"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "MSTORE"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "ADD"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "SWAP1"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "DUP2"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "MSTORE"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "ADD"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8056,
									"end": 8074,
									"name": "KECCAK256"
								},
								{
									"begin": 8056,
									"end": 8107,
									"name": "DUP2"
								},
								{
									"begin": 8056,
									"end": 8107,
									"name": "SWAP1"
								},
								{
									"begin": 8056,
									"end": 8107,
									"name": "SSTORE"
								},
								{
									"begin": 8056,
									"end": 8107,
									"name": "POP"
								},
								{
									"begin": 8143,
									"end": 8150,
									"name": "DUP2"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "AND"
								},
								{
									"begin": 8139,
									"end": 8140,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "AND"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8152,
									"end": 8158,
									"name": "DUP4"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "MLOAD"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "DUP1"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "DUP3"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "DUP2"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "MSTORE"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "ADD"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "SWAP2"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "POP"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "POP"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "MLOAD"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "DUP1"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "SWAP2"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "SUB"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "SWAP1"
								},
								{
									"begin": 8122,
									"end": 8159,
									"name": "LOG3"
								},
								{
									"begin": 7796,
									"end": 8166,
									"name": "POP"
								},
								{
									"begin": 7796,
									"end": 8166,
									"name": "POP"
								},
								{
									"begin": 7796,
									"end": 8166,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10658,
									"end": 10750,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 10658,
									"end": 10750,
									"name": "JUMPDEST"
								},
								{
									"begin": 10658,
									"end": 10750,
									"name": "POP"
								},
								{
									"begin": 10658,
									"end": 10750,
									"name": "POP"
								},
								{
									"begin": 10658,
									"end": 10750,
									"name": "POP"
								},
								{
									"begin": 10658,
									"end": 10750,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "JUMPDEST"
								},
								{
									"begin": 892,
									"end": 899,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 911,
									"end": 920,
									"name": "DUP1"
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3"
								},
								{
									"begin": 923,
									"end": 924,
									"name": "DUP5"
								},
								{
									"begin": 923,
									"end": 928,
									"name": "ADD"
								},
								{
									"begin": 911,
									"end": 928,
									"name": "SWAP1"
								},
								{
									"begin": 911,
									"end": 928,
									"name": "POP"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP4"
								},
								{
									"begin": 946,
									"end": 947,
									"name": "DUP2"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "LT"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "ISZERO"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "JUMPI"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MLOAD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SUB"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP3"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MSTORE"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "POP"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "ADD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "POP"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "POP"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "MLOAD"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "DUP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP2"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SUB"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "REVERT"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 938,
									"end": 984,
									"name": "JUMPDEST"
								},
								{
									"begin": 1002,
									"end": 1003,
									"name": "DUP1"
								},
								{
									"begin": 995,
									"end": 1003,
									"name": "SWAP2"
								},
								{
									"begin": 995,
									"end": 1003,
									"name": "POP"
								},
								{
									"begin": 995,
									"end": 1003,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "SWAP3"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "SWAP2"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 1010,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP3"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SLOAD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP2"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "AND"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ISZERO"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "MUL"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SUB"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "AND"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DIV"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "MSTORE"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "KECCAK256"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ADD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DIV"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP2"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ADD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP3"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP3"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "LT"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPI"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "MLOAD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "NOT"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "AND"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP4"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ADD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "OR"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP6"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SSTORE"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMP"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP3"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ADD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ADD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP6"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SSTORE"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP3"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ISZERO"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPI"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP2"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP3"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ADD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP3"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP2"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "GT"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ISZERO"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPI"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP3"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "MLOAD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP3"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SSTORE"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP2"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ADD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP2"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ADD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMP"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "POP"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "POP"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP2"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "POP"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP2"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "tag",
									"value": "34"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP3"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "GT"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ISZERO"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [tag]",
									"value": "35"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPI"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP2"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SSTORE"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "POP"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "ADD"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [tag]",
									"value": "34"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMP"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "tag",
									"value": "35"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "POP"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMP"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "tag",
									"value": "33"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "SWAP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "JUMPDEST"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "DUP1"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "CODECOPY"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 339,
									"end": 3747,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204cf7153d6eb1d67a524755084c2eeec48ea9d4058113f7ff6d24c6da6234b9cd64736f6c63430006020033",
									".code": [
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "LT"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "SHR"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "48A3B4A4"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "GT"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "48A3B4A4"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMP"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "EQ"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPI"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 3747,
											"name": "REVERT"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMPDEST"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMPDEST"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MLOAD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ADD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP3"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SUB"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP3"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MSTORE"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP4"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MLOAD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MSTORE"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ADD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MLOAD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ADD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP4"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ADD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "AND"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ISZERO"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMPI"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP3"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SUB"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MLOAD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP4"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SUB"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "EXP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SUB"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "NOT"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "AND"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MSTORE"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ADD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMPDEST"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP3"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MLOAD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SUB"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "RETURN"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "JUMPDEST"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ADD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "AND"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ADD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP3"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ADD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP3"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "JUMPDEST"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "MLOAD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP3"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ISZERO"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ISZERO"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ISZERO"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ISZERO"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "MSTORE"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ADD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "MLOAD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SUB"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "RETURN"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "JUMPDEST"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "JUMPDEST"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "MLOAD"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "DUP1"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "DUP3"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "DUP2"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "MSTORE"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "ADD"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "SWAP2"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "POP"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "POP"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "MLOAD"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "DUP1"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "SWAP2"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "SUB"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "SWAP1"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "RETURN"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "JUMPDEST"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP3"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP3"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP3"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "JUMPDEST"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "MLOAD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP3"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ISZERO"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ISZERO"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ISZERO"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ISZERO"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "MSTORE"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "MLOAD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SUB"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "RETURN"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "JUMPDEST"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "JUMPDEST"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "MLOAD"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "DUP3"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "AND"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "AND"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "DUP2"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "MSTORE"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "ADD"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "SWAP2"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "POP"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "POP"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "MLOAD"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "SWAP2"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "SUB"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "SWAP1"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "RETURN"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "JUMPDEST"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ADD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "AND"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ADD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP3"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ADD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP3"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "JUMPDEST"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "MLOAD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP3"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ISZERO"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ISZERO"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ISZERO"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ISZERO"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "MSTORE"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ADD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "MLOAD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SUB"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "RETURN"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "JUMPDEST"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "JUMPDEST"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "MLOAD"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "DUP1"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "DUP3"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "DUP2"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "MSTORE"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "ADD"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "SWAP2"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "POP"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "POP"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "MLOAD"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "DUP1"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "SWAP2"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "SUB"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "SWAP1"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "RETURN"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "JUMPDEST"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "ADD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "AND"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "ADD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP3"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "JUMPDEST"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "MLOAD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP3"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "MSTORE"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "ADD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "MLOAD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SUB"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "RETURN"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP3"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SUB"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP3"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP4"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP4"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "AND"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ISZERO"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMPI"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP3"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SUB"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP4"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SUB"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "EXP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SUB"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "NOT"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "AND"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP3"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SUB"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "RETURN"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "JUMPDEST"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ADD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "AND"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ADD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP3"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ADD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP3"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "JUMPDEST"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "MLOAD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP3"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ISZERO"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ISZERO"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ISZERO"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ISZERO"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "MSTORE"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ADD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "MLOAD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SUB"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "RETURN"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "JUMPDEST"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "AND"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP3"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP3"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "JUMPDEST"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "MLOAD"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "DUP3"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "ISZERO"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "ISZERO"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "ISZERO"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "ISZERO"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "MSTORE"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "MLOAD"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SUB"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "RETURN"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "JUMPDEST"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "ADD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "AND"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "ADD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP3"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "AND"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "ADD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP3"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "JUMPDEST"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "MLOAD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP3"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "MSTORE"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "ADD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "MLOAD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SUB"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "RETURN"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMPDEST"
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SLOAD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ISZERO"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MUL"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SUB"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DIV"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DIV"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MUL"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MLOAD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MSTORE"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MSTORE"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SLOAD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ISZERO"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MUL"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SUB"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DIV"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ISZERO"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPI"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "LT"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPI"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP4"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SLOAD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DIV"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MUL"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP4"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MSTORE"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPDEST"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MSTORE"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "KECCAK256"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPDEST"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SLOAD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MSTORE"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP4"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "GT"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPI"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SUB"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPDEST"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "JUMPDEST"
										},
										{
											"begin": 4299,
											"end": 4303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4354,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 4324,
											"end": 4334,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "JUMPDEST"
										},
										{
											"begin": 4338,
											"end": 4345,
											"name": "DUP5"
										},
										{
											"begin": 4347,
											"end": 4353,
											"name": "DUP5"
										},
										{
											"begin": 4315,
											"end": 4323,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4315,
											"end": 4354,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4315,
											"end": 4354,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 4315,
											"end": 4354,
											"name": "JUMPDEST"
										},
										{
											"begin": 4371,
											"end": 4375,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4364,
											"end": 4375,
											"name": "SWAP1"
										},
										{
											"begin": 4364,
											"end": 4375,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP3"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "JUMPDEST"
										},
										{
											"begin": 3276,
											"end": 3283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SLOAD"
										},
										{
											"begin": 3295,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3295,
											"end": 3314,
											"name": "POP"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "SWAP1"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "JUMPDEST"
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 5000,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "DUP5"
										},
										{
											"begin": 4982,
											"end": 4991,
											"name": "DUP5"
										},
										{
											"begin": 4993,
											"end": 4999,
											"name": "DUP5"
										},
										{
											"begin": 4964,
											"end": 4973,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4964,
											"end": 5000,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4964,
											"end": 5000,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 4964,
											"end": 5000,
											"name": "JUMPDEST"
										},
										{
											"begin": 5010,
											"end": 5131,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5019,
											"end": 5025,
											"name": "DUP5"
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 5027,
											"end": 5037,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "JUMPDEST"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "DUP6"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "MLOAD"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "DUP1"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "DUP1"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "DUP2"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "SWAP2"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "CODECOPY"
										},
										{
											"begin": 5041,
											"end": 5052,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "DUP12"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "DUP2"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "DUP2"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "KECCAK256"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5073,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5061,
											"end": 5071,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5061,
											"end": 5073,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5061,
											"end": 5073,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5061,
											"end": 5073,
											"name": "JUMPDEST"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "DUP2"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "DUP2"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "KECCAK256"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "SLOAD"
										},
										{
											"begin": 5041,
											"end": 5078,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5041,
											"end": 5078,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "SWAP3"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "SWAP2"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "JUMPDEST"
										},
										{
											"begin": 5010,
											"end": 5018,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5010,
											"end": 5131,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5010,
											"end": 5131,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5010,
											"end": 5131,
											"name": "JUMPDEST"
										},
										{
											"begin": 5148,
											"end": 5152,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5141,
											"end": 5152,
											"name": "SWAP1"
										},
										{
											"begin": 5141,
											"end": 5152,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP4"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP3"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "JUMPDEST"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "SWAP1"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "SLOAD"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "SWAP1"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "EXP"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "SWAP1"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "DIV"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "AND"
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "SWAP1"
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "POP"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "SWAP1"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "JUMPDEST"
										},
										{
											"begin": 5642,
											"end": 5646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5741,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5667,
											"end": 5679,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5667,
											"end": 5677,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5667,
											"end": 5679,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5667,
											"end": 5679,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 5667,
											"end": 5679,
											"name": "JUMPDEST"
										},
										{
											"begin": 5681,
											"end": 5688,
											"name": "DUP5"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5729,
											"end": 5739,
											"name": "DUP6"
										},
										{
											"begin": 5690,
											"end": 5701,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "AND"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "AND"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "DUP2"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "MSTORE"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "ADD"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "SWAP1"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "DUP2"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "MSTORE"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "ADD"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "KECCAK256"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP10"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "AND"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "AND"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "DUP2"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "MSTORE"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "ADD"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "SWAP1"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "DUP2"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "MSTORE"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "ADD"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "KECCAK256"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "SLOAD"
										},
										{
											"begin": 5690,
											"end": 5728,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5690,
											"end": 5728,
											"name": "SWAP1"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "SWAP2"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "SWAP1"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "AND"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "JUMPDEST"
										},
										{
											"begin": 5658,
											"end": 5666,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5658,
											"end": 5741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5658,
											"end": 5741,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 5658,
											"end": 5741,
											"name": "JUMPDEST"
										},
										{
											"begin": 5758,
											"end": 5762,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5751,
											"end": 5762,
											"name": "SWAP1"
										},
										{
											"begin": 5751,
											"end": 5762,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP3"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "JUMPDEST"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "SWAP1"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "SLOAD"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "SWAP1"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "EXP"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "SWAP1"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "DIV"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "DUP2"
										},
										{
											"begin": 519,
											"end": 596,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "JUMPDEST"
										},
										{
											"begin": 3445,
											"end": 3452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3480,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "DUP4"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "AND"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "AND"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "KECCAK256"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "SLOAD"
										},
										{
											"begin": 3464,
											"end": 3489,
											"name": "SWAP1"
										},
										{
											"begin": 3464,
											"end": 3489,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2413,
											"end": 2426,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2445,
											"end": 2452,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SLOAD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "AND"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ISZERO"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MUL"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SUB"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "AND"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DIV"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DIV"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MUL"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MLOAD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP3"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP3"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SLOAD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "AND"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ISZERO"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MUL"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SUB"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "AND"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DIV"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ISZERO"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPI"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "LT"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPI"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP4"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SLOAD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DIV"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MUL"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP4"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPDEST"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP3"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "KECCAK256"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPDEST"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SLOAD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP4"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "GT"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPI"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP3"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SUB"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "AND"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP3"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPDEST"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "JUMPDEST"
										},
										{
											"begin": 6349,
											"end": 6353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6494,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6374,
											"end": 6386,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 6374,
											"end": 6384,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 6374,
											"end": 6386,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6374,
											"end": 6386,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 6374,
											"end": 6386,
											"name": "JUMPDEST"
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP5"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "DUP6"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "MLOAD"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "DUP1"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "DUP1"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "DUP2"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "SWAP2"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "CODECOPY"
										},
										{
											"begin": 6397,
											"end": 6408,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "AND"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "AND"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "DUP2"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "SWAP1"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "DUP2"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "KECCAK256"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP11"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "AND"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "AND"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "DUP2"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "SWAP1"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "DUP2"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "KECCAK256"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "SLOAD"
										},
										{
											"begin": 6397,
											"end": 6435,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 6397,
											"end": 6435,
											"name": "SWAP1"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "SWAP3"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "SWAP2"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "SWAP1"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "AND"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "JUMPDEST"
										},
										{
											"begin": 6365,
											"end": 6373,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 6365,
											"end": 6494,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6365,
											"end": 6494,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 6365,
											"end": 6494,
											"name": "JUMPDEST"
										},
										{
											"begin": 6511,
											"end": 6515,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6504,
											"end": 6515,
											"name": "SWAP1"
										},
										{
											"begin": 6504,
											"end": 6515,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP3"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "JUMPDEST"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 832,
											"end": 845,
											"name": "DUP1"
										},
										{
											"begin": 848,
											"end": 860,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 848,
											"end": 858,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 848,
											"end": 860,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 860,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 848,
											"end": 860,
											"name": "JUMPDEST"
										},
										{
											"begin": 832,
											"end": 860,
											"name": "SWAP1"
										},
										{
											"begin": 832,
											"end": 860,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 898,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 880,
											"end": 885,
											"name": "DUP2"
										},
										{
											"begin": 887,
											"end": 889,
											"name": "DUP6"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP6"
										},
										{
											"begin": 870,
											"end": 879,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 870,
											"end": 898,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 898,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 870,
											"end": 898,
											"name": "JUMPDEST"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "SWAP1"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "SLOAD"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "SWAP1"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "EXP"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "SWAP1"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "DIV"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "AND"
										},
										{
											"begin": 987,
											"end": 1041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 987,
											"end": 1041,
											"name": "AND"
										},
										{
											"begin": 987,
											"end": 1041,
											"name": "PUSH",
											"value": "BA3D69D7"
										},
										{
											"begin": 1055,
											"end": 1097,
											"name": "PUSH",
											"value": "50CA75E3957C37DDF26D58046D8F9967B88190C"
										},
										{
											"begin": 1127,
											"end": 1129,
											"name": "DUP7"
										},
										{
											"begin": 2252,
											"end": 2279,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2268,
											"end": 2278,
											"name": "CALLER"
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2252,
											"end": 2279,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2252,
											"end": 2279,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2252,
											"end": 2279,
											"name": "JUMPDEST"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MLOAD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP2"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MSTORE"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "2B00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP2"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MSTORE"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "3300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP2"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MSTORE"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "2B00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP2"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MSTORE"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "5472616E66657220416C65727400000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP2"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MSTORE"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "2B00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP2"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MSTORE"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "486F6F7261792120000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP2"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MSTORE"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP3"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MLOAD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "SWAP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "SWAP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP4"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "SWAP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "2073656E74200000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP2"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MSTORE"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "205055534820746F20796F752100000000000000000000000000000000000000"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "DUP2"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MSTORE"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "SWAP2"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "SWAP1"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 2533,
											"name": "MSTORE"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "MLOAD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP5"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "AND"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SHL"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "MSTORE"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "ADD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP5"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "AND"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "AND"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "MSTORE"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "ADD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP4"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "AND"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "AND"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "MSTORE"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "ADD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "ADD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP3"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SUB"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP3"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "MSTORE"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP4"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "MLOAD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "MSTORE"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "ADD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SWAP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "MLOAD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SWAP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "ADD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SWAP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP4"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SWAP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SWAP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "ADD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SWAP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "AND"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "ISZERO"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "JUMPI"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP3"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SUB"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "MLOAD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP4"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SUB"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "EXP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SUB"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "NOT"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "AND"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "MSTORE"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "ADD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SWAP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "JUMPDEST"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SWAP5"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "MLOAD"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP4"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "SUB"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP8"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "DUP1"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "GAS"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "CALL"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 987,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 2601,
											"end": 2605,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2594,
											"end": 2605,
											"name": "SWAP2"
										},
										{
											"begin": 2594,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 2594,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP3"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 2612,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "JUMPDEST"
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4055,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4061,
											"name": "DUP5"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "AND"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "AND"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "DUP2"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "MSTORE"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "ADD"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "DUP2"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "MSTORE"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "ADD"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "KECCAK256"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "DUP4"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "AND"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "AND"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "DUP2"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "MSTORE"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "ADD"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "SWAP1"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "DUP2"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "MSTORE"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "ADD"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "KECCAK256"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "SLOAD"
										},
										{
											"begin": 4037,
											"end": 4071,
											"name": "SWAP1"
										},
										{
											"begin": 4037,
											"end": 4071,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP3"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 735,
											"end": 839,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 735,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 788,
											"end": 803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 822,
											"end": 832,
											"name": "CALLER"
										},
										{
											"begin": 815,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 815,
											"end": 832,
											"name": "POP"
										},
										{
											"begin": 735,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 735,
											"end": 839,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "JUMPDEST"
										},
										{
											"begin": 9438,
											"end": 9439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "AND"
										},
										{
											"begin": 9421,
											"end": 9426,
											"name": "DUP4"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "AND"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "EQ"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "ISZERO"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "JUMPI"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "MLOAD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "MSTORE"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "ADD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP1"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP1"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "ADD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP3"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SUB"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP3"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "MSTORE"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "MSTORE"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "ADD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP1"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SWAP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "CODECOPY"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "ADD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SWAP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "POP"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "POP"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "MLOAD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP1"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SWAP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SUB"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SWAP1"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "REVERT"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "JUMPDEST"
										},
										{
											"begin": 9518,
											"end": 9519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "AND"
										},
										{
											"begin": 9499,
											"end": 9506,
											"name": "DUP3"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "AND"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "EQ"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "ISZERO"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "JUMPI"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "MLOAD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "MSTORE"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "ADD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP1"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP1"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "ADD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP3"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SUB"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP3"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "MSTORE"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "MSTORE"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "ADD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP1"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SWAP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "CODECOPY"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "ADD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SWAP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "POP"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "POP"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "MLOAD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP1"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SWAP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SUB"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SWAP1"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "REVERT"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "JUMPDEST"
										},
										{
											"begin": 9600,
											"end": 9606,
											"name": "DUP1"
										},
										{
											"begin": 9570,
											"end": 9581,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9587,
											"name": "DUP6"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "AND"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "AND"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "DUP2"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "MSTORE"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "ADD"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "SWAP1"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "DUP2"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "MSTORE"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "ADD"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "KECCAK256"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9596,
											"name": "DUP5"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "AND"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "AND"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "DUP2"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "MSTORE"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "ADD"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "SWAP1"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "DUP2"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "MSTORE"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "ADD"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "KECCAK256"
										},
										{
											"begin": 9570,
											"end": 9606,
											"name": "DUP2"
										},
										{
											"begin": 9570,
											"end": 9606,
											"name": "SWAP1"
										},
										{
											"begin": 9570,
											"end": 9606,
											"name": "SSTORE"
										},
										{
											"begin": 9570,
											"end": 9606,
											"name": "POP"
										},
										{
											"begin": 9637,
											"end": 9644,
											"name": "DUP2"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "AND"
										},
										{
											"begin": 9630,
											"end": 9635,
											"name": "DUP4"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "AND"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9646,
											"end": 9652,
											"name": "DUP4"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "MLOAD"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "DUP1"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "DUP3"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "DUP2"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "MSTORE"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "ADD"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "SWAP2"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "POP"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "POP"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "MLOAD"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "DUP1"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "SWAP2"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "SUB"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "SWAP1"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "LOG3"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "POP"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "POP"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "POP"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "JUMPDEST"
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "AND"
										},
										{
											"begin": 7101,
											"end": 7107,
											"name": "DUP4"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "AND"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "EQ"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "ISZERO"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "JUMPI"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "MLOAD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "MSTORE"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "ADD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP1"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP1"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "ADD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP3"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SUB"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP3"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "MSTORE"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "MSTORE"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "ADD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP1"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SWAP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "CODECOPY"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "ADD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SWAP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "POP"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "POP"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "MLOAD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP1"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SWAP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SUB"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SWAP1"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "REVERT"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "JUMPDEST"
										},
										{
											"begin": 7202,
											"end": 7203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "AND"
										},
										{
											"begin": 7181,
											"end": 7190,
											"name": "DUP3"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "AND"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "EQ"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "ISZERO"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "JUMPI"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "MLOAD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "MSTORE"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "ADD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP1"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP1"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "ADD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP3"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SUB"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP3"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "MSTORE"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "MSTORE"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "ADD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP1"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SWAP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "CODECOPY"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "ADD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SWAP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "POP"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "POP"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "MLOAD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP1"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SWAP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SUB"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SWAP1"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "REVERT"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "JUMPDEST"
										},
										{
											"begin": 7255,
											"end": 7302,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 7276,
											"end": 7282,
											"name": "DUP4"
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "DUP4"
										},
										{
											"begin": 7295,
											"end": 7301,
											"name": "DUP4"
										},
										{
											"begin": 7255,
											"end": 7275,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 7255,
											"end": 7302,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7255,
											"end": 7302,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 7255,
											"end": 7302,
											"name": "JUMPDEST"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 7355,
											"end": 7361,
											"name": "DUP2"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "MLOAD"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "DUP1"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "ADD"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "MSTORE"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "DUP1"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "DUP2"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "MSTORE"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "ADD"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "SWAP2"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "CODECOPY"
										},
										{
											"begin": 7333,
											"end": 7342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "DUP1"
										},
										{
											"begin": 7343,
											"end": 7349,
											"name": "DUP8"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "AND"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "AND"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "DUP2"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "MSTORE"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "ADD"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "SWAP1"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "DUP2"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "MSTORE"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "ADD"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "KECCAK256"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "SLOAD"
										},
										{
											"begin": 7333,
											"end": 7354,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 7333,
											"end": 7354,
											"name": "SWAP1"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "SWAP3"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "SWAP2"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "SWAP1"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "AND"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "JUMPDEST"
										},
										{
											"begin": 7313,
											"end": 7322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "DUP1"
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "DUP6"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "AND"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "AND"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "DUP2"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "MSTORE"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "ADD"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "SWAP1"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "DUP2"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "MSTORE"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "ADD"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "KECCAK256"
										},
										{
											"begin": 7313,
											"end": 7404,
											"name": "DUP2"
										},
										{
											"begin": 7313,
											"end": 7404,
											"name": "SWAP1"
										},
										{
											"begin": 7313,
											"end": 7404,
											"name": "SSTORE"
										},
										{
											"begin": 7313,
											"end": 7404,
											"name": "POP"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 7462,
											"end": 7468,
											"name": "DUP2"
										},
										{
											"begin": 7437,
											"end": 7446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "DUP1"
										},
										{
											"begin": 7447,
											"end": 7456,
											"name": "DUP6"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "AND"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "AND"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "DUP2"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "MSTORE"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "ADD"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "SWAP1"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "DUP2"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "MSTORE"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "ADD"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "KECCAK256"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "SLOAD"
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "SWAP1"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "SWAP2"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "SWAP1"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "AND"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "JUMPDEST"
										},
										{
											"begin": 7414,
											"end": 7423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "DUP1"
										},
										{
											"begin": 7424,
											"end": 7433,
											"name": "DUP5"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "AND"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "AND"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "DUP2"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "MSTORE"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "ADD"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "SWAP1"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "DUP2"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "MSTORE"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "ADD"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "KECCAK256"
										},
										{
											"begin": 7414,
											"end": 7469,
											"name": "DUP2"
										},
										{
											"begin": 7414,
											"end": 7469,
											"name": "SWAP1"
										},
										{
											"begin": 7414,
											"end": 7469,
											"name": "SSTORE"
										},
										{
											"begin": 7414,
											"end": 7469,
											"name": "POP"
										},
										{
											"begin": 7501,
											"end": 7510,
											"name": "DUP2"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "AND"
										},
										{
											"begin": 7493,
											"end": 7499,
											"name": "DUP4"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "AND"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7512,
											"end": 7518,
											"name": "DUP4"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "MLOAD"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "DUP1"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "DUP3"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "DUP2"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "MSTORE"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "ADD"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "SWAP2"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "POP"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "POP"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "MLOAD"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "DUP1"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "SWAP2"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "SUB"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "SWAP1"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "LOG3"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMPDEST"
										},
										{
											"begin": 1778,
											"end": 1785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP4"
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "DUP4"
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "GT"
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "ISZERO"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP3"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "EXP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "NOT"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP3"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "REVERT"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "DUP4"
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP6"
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "SUB"
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "SWAP1"
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "POP"
										},
										{
											"begin": 1871,
											"end": 1872,
											"name": "DUP1"
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "SWAP2"
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "POP"
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "SWAP4"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "SWAP3"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2670,
											"end": 3171,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2670,
											"end": 3171,
											"name": "JUMPDEST"
										},
										{
											"begin": 2735,
											"end": 2748,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2760,
											"end": 2774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2809,
											"name": "DUP3"
										},
										{
											"begin": 2785,
											"end": 2811,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2785,
											"end": 2811,
											"name": "AND"
										},
										{
											"begin": 2777,
											"end": 2812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 2812,
											"name": "SHL"
										},
										{
											"begin": 2760,
											"end": 2812,
											"name": "SWAP1"
										},
										{
											"begin": 2760,
											"end": 2812,
											"name": "POP"
										},
										{
											"begin": 2822,
											"end": 2838,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "MLOAD"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "DUP1"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "ADD"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "MSTORE"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "DUP1"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "DUP2"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "MSTORE"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "ADD"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "PUSH",
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "DUP2"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "MSTORE"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "POP"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "SWAP1"
										},
										{
											"begin": 2822,
											"end": 2859,
											"name": "POP"
										},
										{
											"begin": 2869,
											"end": 2889,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2902,
											"end": 2904,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "MLOAD"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "DUP3"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "MSTORE"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "ADD"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "NOT"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "AND"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "ADD"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "DUP3"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "ADD"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "MSTORE"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "DUP1"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "ISZERO"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "JUMPI"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "DUP2"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL"
										},
										{
											"begin": 116,
											"end": 120,
											"name": "DUP1"
										},
										{
											"begin": 104,
											"end": 114,
											"name": "CODESIZE"
										},
										{
											"begin": 96,
											"end": 102,
											"name": "DUP4"
										},
										{
											"begin": 87,
											"end": 121,
											"name": "CODECOPY"
										},
										{
											"begin": 147,
											"end": 151,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP3"
										},
										{
											"begin": 135,
											"end": 152,
											"name": "ADD"
										},
										{
											"begin": 125,
											"end": 152,
											"name": "SWAP2"
										},
										{
											"begin": 125,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 156,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "SWAP1"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "POP"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "JUMPDEST"
										},
										{
											"begin": 2892,
											"end": 2905,
											"name": "POP"
										},
										{
											"begin": 2869,
											"end": 2905,
											"name": "SWAP1"
										},
										{
											"begin": 2869,
											"end": 2905,
											"name": "POP"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "PUSH",
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2915,
											"end": 2922,
											"name": "DUP2"
										},
										{
											"begin": 2923,
											"end": 2924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "DUP2"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "MLOAD"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "DUP2"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "LT"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "JUMPI"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "INVALID"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "JUMPDEST"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "ADD"
										},
										{
											"begin": 2915,
											"end": 2925,
											"name": "ADD"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "NOT"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "AND"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "DUP2"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "BYTE"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "MSTORE8"
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "PUSH",
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2941,
											"end": 2948,
											"name": "DUP2"
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "DUP2"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "MLOAD"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "DUP2"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "LT"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "JUMPI"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "INVALID"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "JUMPDEST"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "ADD"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "ADD"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "NOT"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "AND"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "DUP2"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "BYTE"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "SWAP1"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "MSTORE8"
										},
										{
											"begin": 2941,
											"end": 2957,
											"name": "POP"
										},
										{
											"begin": 2971,
											"end": 2977,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP1"
										},
										{
											"begin": 2971,
											"end": 2981,
											"name": "SWAP1"
										},
										{
											"begin": 2971,
											"end": 2981,
											"name": "POP"
										},
										{
											"begin": 2967,
											"end": 3133,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2967,
											"end": 3133,
											"name": "JUMPDEST"
										},
										{
											"begin": 2987,
											"end": 2989,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "DUP2"
										},
										{
											"begin": 2983,
											"end": 2989,
											"name": "LT"
										},
										{
											"begin": 2967,
											"end": 3133,
											"name": "ISZERO"
										},
										{
											"begin": 2967,
											"end": 3133,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 2967,
											"end": 3133,
											"name": "JUMPI"
										},
										{
											"begin": 3027,
											"end": 3030,
											"name": "DUP3"
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3037,
											"end": 3043,
											"name": "DUP6"
										},
										{
											"begin": 3048,
											"end": 3050,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3044,
											"end": 3045,
											"name": "DUP5"
										},
										{
											"begin": 3044,
											"end": 3050,
											"name": "ADD"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "DUP2"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "LT"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "JUMPI"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "INVALID"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "JUMPDEST"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "BYTE"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 3037,
											"end": 3051,
											"name": "SHL"
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "NOT"
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "AND"
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "SWAP1"
										},
										{
											"begin": 3037,
											"end": 3056,
											"name": "SHR"
										},
										{
											"begin": 3031,
											"end": 3057,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 3031,
											"end": 3057,
											"name": "SHR"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "AND"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "DUP2"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "MLOAD"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "DUP2"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "LT"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "JUMPI"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "INVALID"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "JUMPDEST"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "ADD"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "ADD"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "MLOAD"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "SHR"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 3027,
											"end": 3058,
											"name": "SHL"
										},
										{
											"begin": 3010,
											"end": 3017,
											"name": "DUP3"
										},
										{
											"begin": 3022,
											"end": 3023,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3020,
											"end": 3021,
											"name": "DUP4"
										},
										{
											"begin": 3020,
											"end": 3023,
											"name": "MUL"
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3018,
											"end": 3023,
											"name": "ADD"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "DUP2"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "MLOAD"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "DUP2"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "LT"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "JUMPI"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "INVALID"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "JUMPDEST"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "ADD"
										},
										{
											"begin": 3010,
											"end": 3024,
											"name": "ADD"
										},
										{
											"begin": 3010,
											"end": 3058,
											"name": "SWAP1"
										},
										{
											"begin": 3010,
											"end": 3058,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3010,
											"end": 3058,
											"name": "NOT"
										},
										{
											"begin": 3010,
											"end": 3058,
											"name": "AND"
										},
										{
											"begin": 3010,
											"end": 3058,
											"name": "SWAP1"
										},
										{
											"begin": 3010,
											"end": 3058,
											"name": "DUP2"
										},
										{
											"begin": 3010,
											"end": 3058,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3058,
											"name": "BYTE"
										},
										{
											"begin": 3010,
											"end": 3058,
											"name": "SWAP1"
										},
										{
											"begin": 3010,
											"end": 3058,
											"name": "MSTORE8"
										},
										{
											"begin": 3010,
											"end": 3058,
											"name": "POP"
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "DUP3"
										},
										{
											"begin": 3116,
											"end": 3120,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 3099,
											"end": 3120,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 3099,
											"end": 3120,
											"name": "SHL"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "DUP6"
										},
										{
											"begin": 3110,
											"end": 3112,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "DUP5"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "ADD"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "DUP2"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "LT"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "JUMPI"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "INVALID"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "JUMPDEST"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "BYTE"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 3099,
											"end": 3113,
											"name": "SHL"
										},
										{
											"begin": 3099,
											"end": 3120,
											"name": "AND"
										},
										{
											"begin": 3093,
											"end": 3121,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 3093,
											"end": 3121,
											"name": "SHR"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "AND"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "DUP2"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "MLOAD"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "DUP2"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "LT"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "JUMPI"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "INVALID"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "JUMPDEST"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "ADD"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "ADD"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "MLOAD"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "SHR"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "SHL"
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "DUP3"
										},
										{
											"begin": 3084,
											"end": 3085,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "DUP4"
										},
										{
											"begin": 3082,
											"end": 3085,
											"name": "MUL"
										},
										{
											"begin": 3080,
											"end": 3081,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3080,
											"end": 3085,
											"name": "ADD"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP2"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "MLOAD"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "DUP2"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "LT"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "JUMPI"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "INVALID"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "JUMPDEST"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "ADD"
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "ADD"
										},
										{
											"begin": 3072,
											"end": 3122,
											"name": "SWAP1"
										},
										{
											"begin": 3072,
											"end": 3122,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3072,
											"end": 3122,
											"name": "NOT"
										},
										{
											"begin": 3072,
											"end": 3122,
											"name": "AND"
										},
										{
											"begin": 3072,
											"end": 3122,
											"name": "SWAP1"
										},
										{
											"begin": 3072,
											"end": 3122,
											"name": "DUP2"
										},
										{
											"begin": 3072,
											"end": 3122,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3122,
											"name": "BYTE"
										},
										{
											"begin": 3072,
											"end": 3122,
											"name": "SWAP1"
										},
										{
											"begin": 3072,
											"end": 3122,
											"name": "MSTORE8"
										},
										{
											"begin": 3072,
											"end": 3122,
											"name": "POP"
										},
										{
											"begin": 2991,
											"end": 2994,
											"name": "DUP1"
										},
										{
											"begin": 2991,
											"end": 2994,
											"name": "DUP1"
										},
										{
											"begin": 2991,
											"end": 2994,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2991,
											"end": 2994,
											"name": "ADD"
										},
										{
											"begin": 2991,
											"end": 2994,
											"name": "SWAP2"
										},
										{
											"begin": 2991,
											"end": 2994,
											"name": "POP"
										},
										{
											"begin": 2991,
											"end": 2994,
											"name": "POP"
										},
										{
											"begin": 2967,
											"end": 3133,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 2967,
											"end": 3133,
											"name": "JUMP"
										},
										{
											"begin": 2967,
											"end": 3133,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 2967,
											"end": 3133,
											"name": "JUMPDEST"
										},
										{
											"begin": 2967,
											"end": 3133,
											"name": "POP"
										},
										{
											"begin": 3156,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "SWAP4"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP"
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "POP"
										},
										{
											"begin": 2670,
											"end": 3171,
											"name": "SWAP2"
										},
										{
											"begin": 2670,
											"end": 3171,
											"name": "SWAP1"
										},
										{
											"begin": 2670,
											"end": 3171,
											"name": "POP"
										},
										{
											"begin": 2670,
											"end": 3171,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "JUMPDEST"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "POP"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "POP"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "POP"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"EPNS_COMM_ADDRESS()": "48a3b4a4",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EPNS_COMM_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Push.sol\":\"Push\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Push.sol\":{\"keccak256\":\"0xad17c543913892c1d0d3daee91bed65790364e138929a6572022928c7fd084e5\",\"urls\":[\"bzz-raw://e2609df591c01744148e921b40ea96707a04371de50d721ec55218a202ac270e\",\"dweb:/ipfs/QmUMmQLCMhJ9C2HAUgy6SwmC82N7YB7y75WcPom5FGkT4y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 431,
								"contract": "contracts/Push.sol:Push",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 437,
								"contract": "contracts/Push.sol:Push",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 439,
								"contract": "contracts/Push.sol:Push",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 441,
								"contract": "contracts/Push.sol:Push",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 443,
								"contract": "contracts/Push.sol:Push",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 445,
								"contract": "contracts/Push.sol:Push",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 17,
								"contract": "contracts/Push.sol:Push",
								"label": "EPNS_COMM_ADDRESS",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":589:5177  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":589:5177  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200fab01bdef7f02fa35095cb249f5cb02d9a51cf9b57a4ea3653c5e64c5a9980b64736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200fab01bdef7f02fa35095cb249f5cb02d9a51cf9b57a4ea3653c5e64c5a9980b64736f6c63430006020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xAB ADD 0xBD 0xEF PUSH32 0x2FA35095CB249F5CB02D9A51CF9B57A4EA3653C5E64C5A9980B64736F6C6343 STOP MOD MUL STOP CALLER ",
							"sourceMap": "589:4588:2:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200fab01bdef7f02fa35095cb249f5cb02d9a51cf9b57a4ea3653c5e64c5a9980b64736f6c63430006020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xAB ADD 0xBD 0xEF PUSH32 0x2FA35095CB249F5CB02D9A51CF9B57A4EA3653C5E64C5A9980B64736F6C6343 STOP MOD MUL STOP CALLER ",
							"sourceMap": "589:4588:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5177,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200fab01bdef7f02fa35095cb249f5cb02d9a51cf9b57a4ea3653c5e64c5a9980b64736f6c63430006020033",
									".code": [
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 5177,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20MinterPauser}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18.     * To select a different value for {decimals}, use {_setupDecimals}.     * All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1306:10752  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1974:2115  constructor (string memory name, string memory symbol) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1974:2115  constructor (string memory name, string memory symbol) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1974:2115  constructor (string memory name, string memory symbol) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1974:2115  constructor (string memory name, string memory symbol) public {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1974:2115  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1974:2115  constructor (string memory name, string memory symbol) public {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1974:2115  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2054:2058  name */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2046:2058  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2078:2084  symbol */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2068:2075  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2068:2084  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_23\n  swap3\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_23:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2106:2108  18 */\n  0x12\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2094:2103  _decimals */\n  0x05\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2094:2108  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1974:2115  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1306:10752  contract ERC20 is Context, IERC20 {... */\n  jump(tag_24)\ntag_22:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_26\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_25)\ntag_26:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_25\n  jumpi\n  swap2\n  dup3\n  add\ntag_27:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_28\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_27)\ntag_28:\ntag_25:\n  pop\n  swap1\n  pop\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  pop\n  swap1\n  jump\t// out\ntag_30:\n  tag_31\n  swap2\n  swap1\ntag_32:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_33\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_32)\ntag_33:\n  pop\n  swap1\n  jump\ntag_31:\n  swap1\n  jump\t// out\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1306:10752  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":1306:10752  contract ERC20 is Context, IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2180:2261  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_17:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_17)\n    tag_19:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2180:2261  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4216:4382  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4216:4382  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3223:3321  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4842:5159  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4842:5159  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3082:3163  function decimals() public view returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5554:5769  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5554:5769  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3379:3496  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3379:3496  function balanceOf(address account) public view override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2374:2459  function symbol() public view returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_39:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_39)\n    tag_41:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2374:2459  function symbol() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6256:6522  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6256:6522  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3699:3871  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3699:3871  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3929:4078  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3929:4078  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2180:2261  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2217:2230  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2249:2254  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2242:2254  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2180:2261  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4216:4382  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4299:4303  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4315:4354  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4324:4336  _msgSender() */\n      tag_58\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4324:4334  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4324:4336  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4338:4345  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4347:4353  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4315:4323  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4315:4354  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4371:4375  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4364:4375  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4216:4382  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3223:3321  function totalSupply() public view override returns (uint256) {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3276:3283  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3302:3314  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3295:3314  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3223:3321  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4842:5159  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4948:4952  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4964:5000  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4974:4980  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4982:4991  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4993:4999  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4964:4973  _transfer */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4964:5000  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5010:5131  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5019:5025  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5027:5039  _msgSender() */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5027:5037  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5027:5039  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5130  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5079:5085  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5130  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5052  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5060  _allowances[sender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5053:5059  sender */\n      dup12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5060  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5074  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5061:5073  _msgSender() */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5061:5071  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5061:5073  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5074  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5078  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5041:5130  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5010:5018  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5010:5131  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5148:5152  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5141:5152  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4842:5159  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3082:3163  function decimals() public view returns (uint8) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3123:3128  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3147:3156  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3140:3156  return _decimals */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3082:3163  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5554:5769  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5642:5646  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5658:5741  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5667:5679  _msgSender() */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5667:5677  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5667:5679  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5681:5688  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5740  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5729:5739  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5701  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5715  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5715  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5724  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5724  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5728  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5690:5740  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5658:5666  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5658:5741  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5758:5762  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5751:5762  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":5554:5769  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3379:3496  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3445:3452  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3471:3480  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3471:3489  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3481:3488  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3471:3489  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3464:3489  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3379:3496  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2374:2459  function symbol() public view returns (string memory) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2413:2426  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2445:2452  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2438:2452  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":2374:2459  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6256:6522  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6349:6353  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6365:6494  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6374:6386  _msgSender() */\n      tag_84\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6374:6384  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6374:6386  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6388:6395  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6493  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6436:6451  subtractedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6493  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6408  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6422  _allowances[_msgSender()] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6422  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6431  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup11\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6431  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6435  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6397:6493  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6365:6373  _approve */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6365:6494  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6511:6515  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6504:6515  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6256:6522  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3699:3871  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3785:3789  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3801:3843  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3811:3823  _msgSender() */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3811:3821  _msgSender */\n      tag_59\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3811:3823  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3825:3834  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3836:3842  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3801:3810  _transfer */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3801:3843  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3860:3864  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3853:3864  return true */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3699:3871  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3929:4078  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4018:4025  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4044:4055  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4044:4062  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4056:4061  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4044:4062  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4044:4071  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4063:4070  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4044:4071  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":4037:4071  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":3929:4078  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":735:839  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":788:803  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":822:832  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":815:832  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":735:839  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9320:9660  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9438:9439  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9421:9440  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9421:9426  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9421:9440  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9413:9481  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9518:9519  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9499:9520  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9499:9506  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9499:9520  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9491:9559  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9600:9606  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9581  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9588  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9582:9587  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9588  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9597  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9589:9596  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9597  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9570:9606  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9637:9644  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9621:9653  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9630:9635  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9621:9653  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9646:9652  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9621:9653  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":9320:9660  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6996:7526  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7119:7120  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7101:7121  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7101:7107  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7101:7121  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7093:7163  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7202:7203  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7181:7204  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7181:7190  recipient */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7181:7204  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7173:7244  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7255:7302  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7276:7282  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7284:7293  recipient */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7295:7301  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7255:7275  _beforeTokenTransfer */\n      tag_99\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7255:7302  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7404  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7355:7361  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7404  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7342  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7350  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7343:7349  sender */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7350  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7354  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7333:7404  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7313:7322  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7313:7330  _balances[sender] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7323:7329  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7313:7330  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7313:7404  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7469  _balances[recipient].add(amount) */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7462:7468  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7446  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7457  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7447:7456  recipient */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7457  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7461  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7437:7469  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7414:7423  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7414:7434  _balances[recipient] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7424:7433  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7414:7434  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7414:7469  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7501:7510  recipient */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7484:7519  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7493:7499  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7484:7519  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7512:7518  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":7484:7519  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":6996:7526  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1778:1785  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1810:1811  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1805:1806  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1805:1811  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1813:1825  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1797:1826  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_104:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_104)\n    tag_106:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1797:1826  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1836:1845  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1852:1853  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1848:1849  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1848:1853  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1836:1853  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1871:1872  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1864:1872  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1692:1879  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":10658:10750  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220e3d80de93171d2d70ee7229843b8c4609bfa4391a28ceab1efbaea4868c7202b64736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620013bb380380620013bb833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002ba565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b620002b791905b80821115620002b357600081600090555060010162000299565b5090565b90565b6110f180620002ca6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025f57806370a08231146102c557806395d89b411461031d578063a457c2d7146103a0578063a9059cbb14610406578063dd62ed3e1461046c576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610586565b604051808215151515815260200191505060405180910390f35b61019f6105a4565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ae565b604051808215151515815260200191505060405180910390f35b610243610687565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6004803603604081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069e565b604051808215151515815260200191505060405180910390f35b610307600480360360208110156102db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610751565b6040518082815260200191505060405180910390f35b610325610799565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ec600480360360408110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061083b565b604051808215151515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610908565b604051808215151515815260200191505060405180910390f35b6104ce6004803603604081101561048257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610926565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050905090565b600061059a6105936109ad565b84846109b5565b6001905092915050565b6000600254905090565b60006105bb848484610bac565b61067c846105c76109ad565b6106778560405180606001604052806028815260200161102660289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061062d6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107476106ab6109ad565b8461074285600160006106bc6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6109b5565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905090565b60006108fe6108486109ad565b846108f98560405180606001604052806025815260200161109760259139600160006108726109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b6001905092915050565b600061091c6109156109ad565b8484610bac565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110736024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fde6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061104e6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fbb6023913960400191505060405180910390fd5b610cc3838383610fb5565b610d2e81604051806060016040528060268152602001611000602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dc1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610edf578082015181840152602081019050610ec4565b50505050905090810190601f168015610f0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610fab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220e3d80de93171d2d70ee7229843b8c4609bfa4391a28ceab1efbaea4868c7202b64736f6c63430006020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13BB CODESIZE SUB DUP1 PUSH3 0x13BB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2BA JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2B7 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x299 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10F1 DUP1 PUSH3 0x2CA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46C JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x365 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x392 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x57C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x551 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A PUSH2 0x593 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP5 DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x67C DUP5 PUSH2 0x5C7 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x677 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1026 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x62D PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x747 PUSH2 0x6AB PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x742 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6BC PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x831 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x831 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x814 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE PUSH2 0x848 PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x8F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1097 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x872 PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91C PUSH2 0x915 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1073 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFDE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x104E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFBB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0xD2E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1000 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDC1 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEDF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEC4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF0C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220E3D8 0xD 0xE9 BALANCE PUSH18 0xD2D70EE7229843B8C4609BFA4391A28CEAB1 0xEF 0xBA 0xEA 0x48 PUSH9 0xC7202B64736F6C6343 STOP MOD MUL STOP CALLER ",
							"sourceMap": "1306:9446:3:-:0;;;1974:141;8:9:-1;5:2;;;30:1;27;20:12;5:2;1974:141:3;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1974:141:3;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1974:141:3;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1974:141:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;1974:141:3;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1974:141:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:4;2046:5;:12;;;;;;;;;;;;:::i;:::-;;2078:6;2068:7;:16;;;;;;;;;;;;:::i;:::-;;2106:2;2094:9;;:14;;;;;;;;;;;;;;;;;;1974:141;;1306:9446;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025f57806370a08231146102c557806395d89b411461031d578063a457c2d7146103a0578063a9059cbb14610406578063dd62ed3e1461046c576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610586565b604051808215151515815260200191505060405180910390f35b61019f6105a4565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ae565b604051808215151515815260200191505060405180910390f35b610243610687565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6004803603604081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069e565b604051808215151515815260200191505060405180910390f35b610307600480360360208110156102db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610751565b6040518082815260200191505060405180910390f35b610325610799565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ec600480360360408110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061083b565b604051808215151515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610908565b604051808215151515815260200191505060405180910390f35b6104ce6004803603604081101561048257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610926565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050905090565b600061059a6105936109ad565b84846109b5565b6001905092915050565b6000600254905090565b60006105bb848484610bac565b61067c846105c76109ad565b6106778560405180606001604052806028815260200161102660289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061062d6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107476106ab6109ad565b8461074285600160006106bc6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6109b5565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905090565b60006108fe6108486109ad565b846108f98560405180606001604052806025815260200161109760259139600160006108726109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b6001905092915050565b600061091c6109156109ad565b8484610bac565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110736024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fde6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061104e6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fbb6023913960400191505060405180910390fd5b610cc3838383610fb5565b610d2e81604051806060016040528060268152602001611000602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dc1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610edf578082015181840152602081019050610ec4565b50505050905090810190601f168015610f0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610fab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220e3d80de93171d2d70ee7229843b8c4609bfa4391a28ceab1efbaea4868c7202b64736f6c63430006020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46C JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x365 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x34A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x392 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x57C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x551 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A PUSH2 0x593 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BB DUP5 DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH2 0x67C DUP5 PUSH2 0x5C7 PUSH2 0x9AD JUMP JUMPDEST PUSH2 0x677 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1026 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x62D PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x747 PUSH2 0x6AB PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x742 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6BC PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x831 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x806 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x831 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x814 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE PUSH2 0x848 PUSH2 0x9AD JUMP JUMPDEST DUP5 PUSH2 0x8F9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1097 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x872 PUSH2 0x9AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91C PUSH2 0x915 PUSH2 0x9AD JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1073 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFDE PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x104E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFBB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC3 DUP4 DUP4 DUP4 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0xD2E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1000 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDC1 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF2D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEDF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEC4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF0C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220E3D8 0xD 0xE9 BALANCE PUSH18 0xD2D70EE7229843B8C4609BFA4391A28CEAB1 0xEF 0xBA 0xEA 0x48 PUSH9 0xC7202B64736F6C6343 STOP MOD MUL STOP CALLER ",
							"sourceMap": "1306:9446:3:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1306:9446:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2180:81:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4216:166;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4216:166:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3223:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4842:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4842:317:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3082:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5554:215;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5554:215:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3379:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3379:117:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2374:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2374:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6256:266;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6256:266:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3699:172;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3699:172:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3929:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3929:149:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2180:81;2217:13;2249:5;2242:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:81;:::o;4216:166::-;4299:4;4315:39;4324:12;:10;:12::i;:::-;4338:7;4347:6;4315:8;:39::i;:::-;4371:4;4364:11;;4216:166;;;;:::o;3223:98::-;3276:7;3302:12;;3295:19;;3223:98;:::o;4842:317::-;4948:4;4964:36;4974:6;4982:9;4993:6;4964:9;:36::i;:::-;5010:121;5019:6;5027:12;:10;:12::i;:::-;5041:89;5079:6;5041:89;;;;;;;;;;;;;;;;;:11;:19;5053:6;5041:19;;;;;;;;;;;;;;;:33;5061:12;:10;:12::i;:::-;5041:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5010:8;:121::i;:::-;5148:4;5141:11;;4842:317;;;;;:::o;3082:81::-;3123:5;3147:9;;;;;;;;;;;3140:16;;3082:81;:::o;5554:215::-;5642:4;5658:83;5667:12;:10;:12::i;:::-;5681:7;5690:50;5729:10;5690:11;:25;5702:12;:10;:12::i;:::-;5690:25;;;;;;;;;;;;;;;:34;5716:7;5690:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5658:8;:83::i;:::-;5758:4;5751:11;;5554:215;;;;:::o;3379:117::-;3445:7;3471:9;:18;3481:7;3471:18;;;;;;;;;;;;;;;;3464:25;;3379:117;;;:::o;2374:85::-;2413:13;2445:7;2438:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2374:85;:::o;6256:266::-;6349:4;6365:129;6374:12;:10;:12::i;:::-;6388:7;6397:96;6436:15;6397:96;;;;;;;;;;;;;;;;;:11;:25;6409:12;:10;:12::i;:::-;6397:25;;;;;;;;;;;;;;;:34;6423:7;6397:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6365:8;:129::i;:::-;6511:4;6504:11;;6256:266;;;;:::o;3699:172::-;3785:4;3801:42;3811:12;:10;:12::i;:::-;3825:9;3836:6;3801:9;:42::i;:::-;3860:4;3853:11;;3699:172;;;;:::o;3929:149::-;4018:7;4044:11;:18;4056:5;4044:18;;;;;;;;;;;;;;;:27;4063:7;4044:27;;;;;;;;;;;;;;;;4037:34;;3929:149;;;;:::o;735:104:1:-;788:15;822:10;815:17;;735:104;:::o;9320:340:3:-;9438:1;9421:19;;:5;:19;;;;9413:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9518:1;9499:21;;:7;:21;;;;9491:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9600:6;9570:11;:18;9582:5;9570:18;;;;;;;;;;;;;;;:27;9589:7;9570:27;;;;;;;;;;;;;;;:36;;;;9637:7;9621:32;;9630:5;9621:32;;;9646:6;9621:32;;;;;;;;;;;;;;;;;;9320:340;;;:::o;6996:530::-;7119:1;7101:20;;:6;:20;;;;7093:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7202:1;7181:23;;:9;:23;;;;7173:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7255:47;7276:6;7284:9;7295:6;7255:20;:47::i;:::-;7333:71;7355:6;7333:71;;;;;;;;;;;;;;;;;:9;:17;7343:6;7333:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7313:9;:17;7323:6;7313:17;;;;;;;;;;;;;;;:91;;;;7437:32;7462:6;7437:9;:20;7447:9;7437:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7414:9;:20;7424:9;7414:20;;;;;;;;;;;;;;;:55;;;;7501:9;7484:35;;7493:6;7484:35;;;7512:6;7484:35;;;;;;;;;;;;;;;;;;6996:530;;;:::o;1692:187:2:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1797:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;10658:92:3:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "867400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1150",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "MSTORE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MLOAD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "CODESIZE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SUB"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP4"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "CODECOPY"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MLOAD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MLOAD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP4"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP3"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MLOAD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP4"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "AND"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ISZERO"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "JUMPI"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP3"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SUB"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MLOAD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP4"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SUB"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "EXP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SUB"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "NOT"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "AND"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "JUMPDEST"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MLOAD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MLOAD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP4"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP3"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MLOAD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP4"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "AND"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ISZERO"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "JUMPI"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP3"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SUB"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MLOAD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP4"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SUB"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "EXP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SUB"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "NOT"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "AND"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "DUP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "ADD"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "SWAP2"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "JUMPDEST"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "MSTORE"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "DUP2"
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP1"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "DUP1"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "MLOAD"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP1"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "ADD"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP1"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP3"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP2"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "SWAP1"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "JUMPDEST"
								},
								{
									"begin": 2046,
									"end": 2058,
									"name": "POP"
								},
								{
									"begin": 2078,
									"end": 2084,
									"name": "DUP1"
								},
								{
									"begin": 2068,
									"end": 2075,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP1"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "DUP1"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "MLOAD"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP1"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "ADD"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP1"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP3"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP2"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "SWAP1"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "JUMPDEST"
								},
								{
									"begin": 2068,
									"end": 2084,
									"name": "POP"
								},
								{
									"begin": 2106,
									"end": 2108,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 2094,
									"end": 2103,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 2094,
									"end": 2103,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "EXP"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "DUP2"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "SLOAD"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "DUP2"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "MUL"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "NOT"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "AND"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "SWAP1"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "DUP4"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "AND"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "MUL"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "OR"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "SWAP1"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "SSTORE"
								},
								{
									"begin": 2094,
									"end": 2108,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1974,
									"end": 2115,
									"name": "POP"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMP"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPDEST"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP3"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SLOAD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP2"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "AND"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ISZERO"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "MUL"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SUB"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "AND"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DIV"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "MSTORE"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "KECCAK256"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ADD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DIV"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP2"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ADD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP3"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP3"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "LT"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPI"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "MLOAD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "NOT"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "AND"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP4"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ADD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "OR"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP6"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SSTORE"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMP"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPDEST"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP3"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ADD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ADD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP6"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SSTORE"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP3"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ISZERO"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPI"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP2"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP3"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ADD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPDEST"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP3"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP2"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "GT"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ISZERO"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPI"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP3"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "MLOAD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP3"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SSTORE"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP2"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ADD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP2"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ADD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMP"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPDEST"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPDEST"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "POP"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "POP"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP2"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPDEST"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "POP"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPDEST"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP2"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPDEST"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP3"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "GT"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ISZERO"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPI"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP2"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SSTORE"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "POP"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "ADD"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMP"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "tag",
									"value": "33"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPDEST"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "POP"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMP"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPDEST"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "SWAP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "JUMPDEST"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "DUP1"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "CODECOPY"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1306,
									"end": 10752,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3d80de93171d2d70ee7229843b8c4609bfa4391a28ceab1efbaea4868c7202b64736f6c63430006020033",
									".code": [
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "MSTORE"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "LT"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "SHR"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "GT"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMP"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPDEST"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPI"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "JUMPDEST"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "DUP1"
										},
										{
											"begin": 1306,
											"end": 10752,
											"name": "REVERT"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMPDEST"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMPDEST"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MLOAD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ADD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP3"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SUB"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP3"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MSTORE"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP4"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MLOAD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MSTORE"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ADD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MLOAD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ADD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP4"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ADD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "AND"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ISZERO"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMPI"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP3"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SUB"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MLOAD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP4"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SUB"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "EXP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SUB"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "NOT"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "AND"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MSTORE"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "ADD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMPDEST"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP3"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "MLOAD"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "DUP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP2"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SUB"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "RETURN"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "JUMPDEST"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ADD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "AND"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ADD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP3"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ADD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP3"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "JUMPDEST"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "MLOAD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP3"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ISZERO"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ISZERO"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ISZERO"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ISZERO"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "MSTORE"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "ADD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "MLOAD"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "DUP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SUB"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP1"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "RETURN"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "JUMPDEST"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "JUMPDEST"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "MLOAD"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "DUP1"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "DUP3"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "DUP2"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "MSTORE"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "ADD"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "SWAP2"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "POP"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "POP"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "MLOAD"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "DUP1"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "SWAP2"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "SUB"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "SWAP1"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "RETURN"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "JUMPDEST"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP3"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "AND"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP3"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP3"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "JUMPDEST"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "MLOAD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP3"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ISZERO"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ISZERO"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ISZERO"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ISZERO"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "MSTORE"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "ADD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "MLOAD"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "DUP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP2"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SUB"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "RETURN"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "JUMPDEST"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "JUMPDEST"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "MLOAD"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "DUP3"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "AND"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "AND"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "DUP2"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "MSTORE"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "ADD"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "SWAP2"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "POP"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "POP"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "MLOAD"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "DUP1"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "SWAP2"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "SUB"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "SWAP1"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "RETURN"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "JUMPDEST"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ADD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "AND"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ADD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP3"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ADD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP3"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "JUMPDEST"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "MLOAD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP3"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ISZERO"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ISZERO"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ISZERO"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ISZERO"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "MSTORE"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "ADD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "MLOAD"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "DUP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SUB"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP1"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "RETURN"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "JUMPDEST"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "ADD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "AND"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "ADD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP3"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "JUMPDEST"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "MLOAD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP3"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "MSTORE"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "ADD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "MLOAD"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "DUP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SUB"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "RETURN"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP3"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SUB"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP3"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP4"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP4"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "AND"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ISZERO"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMPI"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP3"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SUB"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP4"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SUB"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "EXP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SUB"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "NOT"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "AND"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MSTORE"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "ADD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP3"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "MLOAD"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "DUP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP2"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SUB"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "RETURN"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "JUMPDEST"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ADD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "AND"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ADD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP3"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ADD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP3"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "JUMPDEST"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "MLOAD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP3"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ISZERO"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ISZERO"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ISZERO"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ISZERO"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "MSTORE"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "ADD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "MLOAD"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "DUP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SUB"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP1"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "RETURN"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "JUMPDEST"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "DUP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "DUP2"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "ADD"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "DUP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "DUP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "AND"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "ADD"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP3"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP2"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "DUP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "ADD"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP3"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP2"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "POP"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "POP"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "POP"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "JUMPDEST"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "MLOAD"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "DUP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "DUP3"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "ISZERO"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "ISZERO"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "ISZERO"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "ISZERO"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "DUP2"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "MSTORE"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "ADD"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP2"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "POP"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "POP"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "MLOAD"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "DUP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP2"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SUB"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP1"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "RETURN"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "JUMPDEST"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "ADD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "AND"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "ADD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP3"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "AND"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "ADD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP3"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "JUMPDEST"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "MLOAD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP3"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "MSTORE"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "ADD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "MLOAD"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "DUP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SUB"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "RETURN"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMPDEST"
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SLOAD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ISZERO"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MUL"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SUB"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DIV"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DIV"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MUL"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MLOAD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MSTORE"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MSTORE"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SLOAD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ISZERO"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MUL"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SUB"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DIV"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ISZERO"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPI"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "LT"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPI"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP4"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SLOAD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DIV"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MUL"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP4"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MSTORE"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPDEST"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MSTORE"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "KECCAK256"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPDEST"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SLOAD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "MSTORE"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP4"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "GT"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPI"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SUB"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "AND"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "DUP3"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP2"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "JUMPDEST"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "SWAP1"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "POP"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "SWAP1"
										},
										{
											"begin": 2180,
											"end": 2261,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "JUMPDEST"
										},
										{
											"begin": 4299,
											"end": 4303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4354,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 4324,
											"end": 4334,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "JUMPDEST"
										},
										{
											"begin": 4338,
											"end": 4345,
											"name": "DUP5"
										},
										{
											"begin": 4347,
											"end": 4353,
											"name": "DUP5"
										},
										{
											"begin": 4315,
											"end": 4323,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 4315,
											"end": 4354,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4315,
											"end": 4354,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 4315,
											"end": 4354,
											"name": "JUMPDEST"
										},
										{
											"begin": 4371,
											"end": 4375,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4364,
											"end": 4375,
											"name": "SWAP1"
										},
										{
											"begin": 4364,
											"end": 4375,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP3"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "SWAP2"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "POP"
										},
										{
											"begin": 4216,
											"end": 4382,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "JUMPDEST"
										},
										{
											"begin": 3276,
											"end": 3283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SLOAD"
										},
										{
											"begin": 3295,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3295,
											"end": 3314,
											"name": "POP"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "SWAP1"
										},
										{
											"begin": 3223,
											"end": 3321,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "JUMPDEST"
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 5000,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "DUP5"
										},
										{
											"begin": 4982,
											"end": 4991,
											"name": "DUP5"
										},
										{
											"begin": 4993,
											"end": 4999,
											"name": "DUP5"
										},
										{
											"begin": 4964,
											"end": 4973,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 4964,
											"end": 5000,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4964,
											"end": 5000,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 4964,
											"end": 5000,
											"name": "JUMPDEST"
										},
										{
											"begin": 5010,
											"end": 5131,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5019,
											"end": 5025,
											"name": "DUP5"
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5027,
											"end": 5037,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "JUMPDEST"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "DUP6"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "MLOAD"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "DUP1"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "DUP1"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "DUP2"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "SWAP2"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "CODECOPY"
										},
										{
											"begin": 5041,
											"end": 5052,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "DUP12"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "DUP2"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "DUP2"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5060,
											"name": "KECCAK256"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5073,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5061,
											"end": 5071,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5061,
											"end": 5073,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5061,
											"end": 5073,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5061,
											"end": 5073,
											"name": "JUMPDEST"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "DUP2"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "DUP2"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "MSTORE"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "ADD"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "KECCAK256"
										},
										{
											"begin": 5041,
											"end": 5074,
											"name": "SLOAD"
										},
										{
											"begin": 5041,
											"end": 5078,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 5041,
											"end": 5078,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "SWAP3"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "SWAP2"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5041,
											"end": 5130,
											"name": "JUMPDEST"
										},
										{
											"begin": 5010,
											"end": 5018,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5010,
											"end": 5131,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5010,
											"end": 5131,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5010,
											"end": 5131,
											"name": "JUMPDEST"
										},
										{
											"begin": 5148,
											"end": 5152,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5141,
											"end": 5152,
											"name": "SWAP1"
										},
										{
											"begin": 5141,
											"end": 5152,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP4"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "SWAP3"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 5159,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "JUMPDEST"
										},
										{
											"begin": 3123,
											"end": 3128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "SWAP1"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "SLOAD"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "SWAP1"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "EXP"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "SWAP1"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "DIV"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "AND"
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "SWAP1"
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "POP"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "SWAP1"
										},
										{
											"begin": 3082,
											"end": 3163,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "JUMPDEST"
										},
										{
											"begin": 5642,
											"end": 5646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5741,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5667,
											"end": 5679,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5667,
											"end": 5677,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5667,
											"end": 5679,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5667,
											"end": 5679,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 5667,
											"end": 5679,
											"name": "JUMPDEST"
										},
										{
											"begin": 5681,
											"end": 5688,
											"name": "DUP5"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 5729,
											"end": 5739,
											"name": "DUP6"
										},
										{
											"begin": 5690,
											"end": 5701,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "AND"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "AND"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "DUP2"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "MSTORE"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "ADD"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "SWAP1"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "DUP2"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "MSTORE"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "ADD"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5715,
											"name": "KECCAK256"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP10"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "AND"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "AND"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "DUP2"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "MSTORE"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "ADD"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "SWAP1"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "DUP2"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "MSTORE"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "ADD"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "KECCAK256"
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "SLOAD"
										},
										{
											"begin": 5690,
											"end": 5728,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5690,
											"end": 5728,
											"name": "SWAP1"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "SWAP2"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "SWAP1"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "AND"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 5690,
											"end": 5740,
											"name": "JUMPDEST"
										},
										{
											"begin": 5658,
											"end": 5666,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5658,
											"end": 5741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5658,
											"end": 5741,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5658,
											"end": 5741,
											"name": "JUMPDEST"
										},
										{
											"begin": 5758,
											"end": 5762,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5751,
											"end": 5762,
											"name": "SWAP1"
										},
										{
											"begin": 5751,
											"end": 5762,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP3"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "SWAP2"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "POP"
										},
										{
											"begin": 5554,
											"end": 5769,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "JUMPDEST"
										},
										{
											"begin": 3445,
											"end": 3452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3480,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "DUP4"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "AND"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "AND"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "KECCAK256"
										},
										{
											"begin": 3471,
											"end": 3489,
											"name": "SLOAD"
										},
										{
											"begin": 3464,
											"end": 3489,
											"name": "SWAP1"
										},
										{
											"begin": 3464,
											"end": 3489,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP2"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "SWAP1"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "POP"
										},
										{
											"begin": 3379,
											"end": 3496,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2413,
											"end": 2426,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2445,
											"end": 2452,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SLOAD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "AND"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ISZERO"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MUL"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SUB"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "AND"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DIV"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DIV"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MUL"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MLOAD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP3"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP3"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SLOAD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "AND"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ISZERO"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MUL"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SUB"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "AND"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DIV"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ISZERO"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPI"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "LT"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPI"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP4"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SLOAD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DIV"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MUL"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP4"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPDEST"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP3"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "KECCAK256"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPDEST"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SLOAD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "MSTORE"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP4"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "GT"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPI"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP3"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SUB"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "AND"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "DUP3"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "ADD"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP2"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "JUMPDEST"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2438,
											"end": 2452,
											"name": "POP"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2374,
											"end": 2459,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "JUMPDEST"
										},
										{
											"begin": 6349,
											"end": 6353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6494,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 6374,
											"end": 6386,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 6374,
											"end": 6384,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6374,
											"end": 6386,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6374,
											"end": 6386,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 6374,
											"end": 6386,
											"name": "JUMPDEST"
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP5"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 6436,
											"end": 6451,
											"name": "DUP6"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "MLOAD"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "DUP1"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "DUP1"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "DUP2"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "SWAP2"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "CODECOPY"
										},
										{
											"begin": 6397,
											"end": 6408,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "AND"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "AND"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "DUP2"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "SWAP1"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "DUP2"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6422,
											"name": "KECCAK256"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP11"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "AND"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "AND"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "DUP2"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "SWAP1"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "DUP2"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "MSTORE"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "ADD"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "KECCAK256"
										},
										{
											"begin": 6397,
											"end": 6431,
											"name": "SLOAD"
										},
										{
											"begin": 6397,
											"end": 6435,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 6397,
											"end": 6435,
											"name": "SWAP1"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "SWAP3"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "SWAP2"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "SWAP1"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "AND"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 6397,
											"end": 6493,
											"name": "JUMPDEST"
										},
										{
											"begin": 6365,
											"end": 6373,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 6365,
											"end": 6494,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6365,
											"end": 6494,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 6365,
											"end": 6494,
											"name": "JUMPDEST"
										},
										{
											"begin": 6511,
											"end": 6515,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6504,
											"end": 6515,
											"name": "SWAP1"
										},
										{
											"begin": 6504,
											"end": 6515,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP3"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "SWAP2"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "POP"
										},
										{
											"begin": 6256,
											"end": 6522,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "JUMPDEST"
										},
										{
											"begin": 3785,
											"end": 3789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3801,
											"end": 3843,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 3811,
											"end": 3823,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 3811,
											"end": 3821,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 3811,
											"end": 3823,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3811,
											"end": 3823,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 3811,
											"end": 3823,
											"name": "JUMPDEST"
										},
										{
											"begin": 3825,
											"end": 3834,
											"name": "DUP5"
										},
										{
											"begin": 3836,
											"end": 3842,
											"name": "DUP5"
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3801,
											"end": 3843,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3801,
											"end": 3843,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 3801,
											"end": 3843,
											"name": "JUMPDEST"
										},
										{
											"begin": 3860,
											"end": 3864,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3853,
											"end": 3864,
											"name": "SWAP1"
										},
										{
											"begin": 3853,
											"end": 3864,
											"name": "POP"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP3"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "SWAP2"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "POP"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "POP"
										},
										{
											"begin": 3699,
											"end": 3871,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "JUMPDEST"
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4055,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4061,
											"name": "DUP5"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "AND"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "AND"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "DUP2"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "MSTORE"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "ADD"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "DUP2"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "MSTORE"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "ADD"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4062,
											"name": "KECCAK256"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "DUP4"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "AND"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "AND"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "DUP2"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "MSTORE"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "ADD"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "SWAP1"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "DUP2"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "MSTORE"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "ADD"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "KECCAK256"
										},
										{
											"begin": 4044,
											"end": 4071,
											"name": "SLOAD"
										},
										{
											"begin": 4037,
											"end": 4071,
											"name": "SWAP1"
										},
										{
											"begin": 4037,
											"end": 4071,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP3"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "SWAP2"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "POP"
										},
										{
											"begin": 3929,
											"end": 4078,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 735,
											"end": 839,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 735,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 788,
											"end": 803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 822,
											"end": 832,
											"name": "CALLER"
										},
										{
											"begin": 815,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 815,
											"end": 832,
											"name": "POP"
										},
										{
											"begin": 735,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 735,
											"end": 839,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "JUMPDEST"
										},
										{
											"begin": 9438,
											"end": 9439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "AND"
										},
										{
											"begin": 9421,
											"end": 9426,
											"name": "DUP4"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "AND"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "EQ"
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "ISZERO"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "JUMPI"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "MLOAD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "MSTORE"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "ADD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP1"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP1"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "ADD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP3"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SUB"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP3"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "MSTORE"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "MSTORE"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "ADD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP1"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SWAP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "CODECOPY"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "ADD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SWAP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "POP"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "POP"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "MLOAD"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "DUP1"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SWAP2"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SUB"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "SWAP1"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "REVERT"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 9413,
											"end": 9481,
											"name": "JUMPDEST"
										},
										{
											"begin": 9518,
											"end": 9519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "AND"
										},
										{
											"begin": 9499,
											"end": 9506,
											"name": "DUP3"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "AND"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "EQ"
										},
										{
											"begin": 9499,
											"end": 9520,
											"name": "ISZERO"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "JUMPI"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "MLOAD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "MSTORE"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "ADD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP1"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP1"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "ADD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP3"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SUB"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP3"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "MSTORE"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "MSTORE"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "ADD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP1"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SWAP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "CODECOPY"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "ADD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SWAP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "POP"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "POP"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "MLOAD"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "DUP1"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SWAP2"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SUB"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "SWAP1"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "REVERT"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 9491,
											"end": 9559,
											"name": "JUMPDEST"
										},
										{
											"begin": 9600,
											"end": 9606,
											"name": "DUP1"
										},
										{
											"begin": 9570,
											"end": 9581,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9587,
											"name": "DUP6"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "AND"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "AND"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "DUP2"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "MSTORE"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "ADD"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "SWAP1"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "DUP2"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "MSTORE"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "ADD"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "KECCAK256"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9596,
											"name": "DUP5"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "AND"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "AND"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "DUP2"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "MSTORE"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "ADD"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "SWAP1"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "DUP2"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "MSTORE"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "ADD"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9597,
											"name": "KECCAK256"
										},
										{
											"begin": 9570,
											"end": 9606,
											"name": "DUP2"
										},
										{
											"begin": 9570,
											"end": 9606,
											"name": "SWAP1"
										},
										{
											"begin": 9570,
											"end": 9606,
											"name": "SSTORE"
										},
										{
											"begin": 9570,
											"end": 9606,
											"name": "POP"
										},
										{
											"begin": 9637,
											"end": 9644,
											"name": "DUP2"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "AND"
										},
										{
											"begin": 9630,
											"end": 9635,
											"name": "DUP4"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "AND"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9646,
											"end": 9652,
											"name": "DUP4"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "MLOAD"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "DUP1"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "DUP3"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "DUP2"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "MSTORE"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "ADD"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "SWAP2"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "POP"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "POP"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "MLOAD"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "DUP1"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "SWAP2"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "SUB"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "SWAP1"
										},
										{
											"begin": 9621,
											"end": 9653,
											"name": "LOG3"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "POP"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "POP"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "POP"
										},
										{
											"begin": 9320,
											"end": 9660,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "JUMPDEST"
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "AND"
										},
										{
											"begin": 7101,
											"end": 7107,
											"name": "DUP4"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "AND"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "EQ"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "ISZERO"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "JUMPI"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "MLOAD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "MSTORE"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "ADD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP1"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP1"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "ADD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP3"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SUB"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP3"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "MSTORE"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "MSTORE"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "ADD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP1"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SWAP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "CODECOPY"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "ADD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SWAP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "POP"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "POP"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "MLOAD"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "DUP1"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SWAP2"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SUB"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "SWAP1"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "REVERT"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 7093,
											"end": 7163,
											"name": "JUMPDEST"
										},
										{
											"begin": 7202,
											"end": 7203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "AND"
										},
										{
											"begin": 7181,
											"end": 7190,
											"name": "DUP3"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "AND"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "EQ"
										},
										{
											"begin": 7181,
											"end": 7204,
											"name": "ISZERO"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "JUMPI"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "MLOAD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "MSTORE"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "ADD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP1"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP1"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "ADD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP3"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SUB"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP3"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "MSTORE"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "MSTORE"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "ADD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP1"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SWAP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "CODECOPY"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "ADD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SWAP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "POP"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "POP"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "MLOAD"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "DUP1"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SWAP2"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SUB"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "SWAP1"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "REVERT"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 7173,
											"end": 7244,
											"name": "JUMPDEST"
										},
										{
											"begin": 7255,
											"end": 7302,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 7276,
											"end": 7282,
											"name": "DUP4"
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "DUP4"
										},
										{
											"begin": 7295,
											"end": 7301,
											"name": "DUP4"
										},
										{
											"begin": 7255,
											"end": 7275,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 7255,
											"end": 7302,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7255,
											"end": 7302,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 7255,
											"end": 7302,
											"name": "JUMPDEST"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 7355,
											"end": 7361,
											"name": "DUP2"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "MLOAD"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "DUP1"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "ADD"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "MSTORE"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "DUP1"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "DUP2"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "MSTORE"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "ADD"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "SWAP2"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "CODECOPY"
										},
										{
											"begin": 7333,
											"end": 7342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "DUP1"
										},
										{
											"begin": 7343,
											"end": 7349,
											"name": "DUP8"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "AND"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "AND"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "DUP2"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "MSTORE"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "ADD"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "SWAP1"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "DUP2"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "MSTORE"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "ADD"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "KECCAK256"
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "SLOAD"
										},
										{
											"begin": 7333,
											"end": 7354,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 7333,
											"end": 7354,
											"name": "SWAP1"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "SWAP3"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "SWAP2"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "SWAP1"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "AND"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 7333,
											"end": 7404,
											"name": "JUMPDEST"
										},
										{
											"begin": 7313,
											"end": 7322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "DUP1"
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "DUP6"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "AND"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "AND"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "DUP2"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "MSTORE"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "ADD"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "SWAP1"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "DUP2"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "MSTORE"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "ADD"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "KECCAK256"
										},
										{
											"begin": 7313,
											"end": 7404,
											"name": "DUP2"
										},
										{
											"begin": 7313,
											"end": 7404,
											"name": "SWAP1"
										},
										{
											"begin": 7313,
											"end": 7404,
											"name": "SSTORE"
										},
										{
											"begin": 7313,
											"end": 7404,
											"name": "POP"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 7462,
											"end": 7468,
											"name": "DUP2"
										},
										{
											"begin": 7437,
											"end": 7446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "DUP1"
										},
										{
											"begin": 7447,
											"end": 7456,
											"name": "DUP6"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "AND"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "AND"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "DUP2"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "MSTORE"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "ADD"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "SWAP1"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "DUP2"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "MSTORE"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "ADD"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "KECCAK256"
										},
										{
											"begin": 7437,
											"end": 7457,
											"name": "SLOAD"
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "SWAP1"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "SWAP2"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "SWAP1"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "AND"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 7437,
											"end": 7469,
											"name": "JUMPDEST"
										},
										{
											"begin": 7414,
											"end": 7423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "DUP1"
										},
										{
											"begin": 7424,
											"end": 7433,
											"name": "DUP5"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "AND"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "AND"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "DUP2"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "MSTORE"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "ADD"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "SWAP1"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "DUP2"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "MSTORE"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "ADD"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "KECCAK256"
										},
										{
											"begin": 7414,
											"end": 7469,
											"name": "DUP2"
										},
										{
											"begin": 7414,
											"end": 7469,
											"name": "SWAP1"
										},
										{
											"begin": 7414,
											"end": 7469,
											"name": "SSTORE"
										},
										{
											"begin": 7414,
											"end": 7469,
											"name": "POP"
										},
										{
											"begin": 7501,
											"end": 7510,
											"name": "DUP2"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "AND"
										},
										{
											"begin": 7493,
											"end": 7499,
											"name": "DUP4"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "AND"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7512,
											"end": 7518,
											"name": "DUP4"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "MLOAD"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "DUP1"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "DUP3"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "DUP2"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "MSTORE"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "ADD"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "SWAP2"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "POP"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "POP"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "MLOAD"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "DUP1"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "SWAP2"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "SUB"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "SWAP1"
										},
										{
											"begin": 7484,
											"end": 7519,
											"name": "LOG3"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7526,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMPDEST"
										},
										{
											"begin": 1778,
											"end": 1785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP4"
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "DUP4"
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "GT"
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "ISZERO"
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "DUP3"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ISZERO"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPI"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP3"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP4"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "EXP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "NOT"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "AND"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP3"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "MLOAD"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP2"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SUB"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "REVERT"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "JUMPDEST"
										},
										{
											"begin": 1797,
											"end": 1826,
											"name": "POP"
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "DUP4"
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP6"
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "SUB"
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "SWAP1"
										},
										{
											"begin": 1836,
											"end": 1853,
											"name": "POP"
										},
										{
											"begin": 1871,
											"end": 1872,
											"name": "DUP1"
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "SWAP2"
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "POP"
										},
										{
											"begin": 1864,
											"end": 1872,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "SWAP4"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "SWAP3"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 1879,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "JUMPDEST"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "POP"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "POP"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "POP"
										},
										{
											"begin": 10658,
											"end": 10750,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20MinterPauser}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18.     * To select a different value for {decimals}, use {_setupDecimals}.     * All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 431,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 437,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 439,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 441,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 443,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 445,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol\":93:2605  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol\":93:2605  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203d42b05f00612e2604f9086f4bebb979b5865286199c864825c888e5b644fa3664736f6c63430006020033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d42b05f00612e2604f9086f4bebb979b5865286199c864825c888e5b644fa3664736f6c63430006020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE TIMESTAMP 0xB0 0x5F STOP PUSH2 0x2E26 DIV 0xF9 ADDMOD PUSH16 0x4BEBB979B5865286199C864825C888E5 0xB6 DIFFICULTY STATICCALL CALLDATASIZE PUSH5 0x736F6C6343 STOP MOD MUL STOP CALLER ",
							"sourceMap": "93:2512:5:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d42b05f00612e2604f9086f4bebb979b5865286199c864825c888e5b644fa3664736f6c63430006020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE TIMESTAMP 0xB0 0x5F STOP PUSH2 0x2E26 DIV 0xF9 ADDMOD PUSH16 0x4BEBB979B5865286199C864825C888E5 0xB6 DIFFICULTY STATICCALL CALLDATASIZE PUSH5 0x736F6C6343 STOP MOD MUL STOP CALLER ",
							"sourceMap": "93:2512:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d42b05f00612e2604f9086f4bebb979b5865286199c864825c888e5b644fa3664736f6c63430006020033",
									".code": [
										{
											"begin": 93,
											"end": 2605,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "ADDRESS"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "EQ"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "MSTORE"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "DUP1"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Push.sol": {
				"ast": {
					"absolutePath": "contracts/Push.sol",
					"exportedSymbols": {
						"IPUSHCommInterface": [
							12
						],
						"Push": [
							197
						]
					},
					"id": 198,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 198,
							"sourceUnit": 900,
							"src": "59:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 12,
							"linearizedBaseContracts": [
								12
							],
							"name": "IPUSHCommInterface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ba3d69d7",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendNotification",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "_channel",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "280:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"name": "_identity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "300:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 7,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "300:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "261:64:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "334:0:0"
									},
									"scope": 12,
									"src": "236:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 198,
							"src": "201:136:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 13,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 899,
										"src": "356:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$899",
											"typeString": "contract ERC20"
										}
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "356:5:0"
								}
							],
							"contractDependencies": [
								224,
								899,
								968
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 197,
							"linearizedBaseContracts": [
								197,
								899,
								968,
								224
							],
							"name": "Push",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "48a3b4a4",
									"id": 17,
									"name": "EPNS_COMM_ADDRESS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 197,
									"src": "519:77:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 15,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "519:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307838376461394166313839396164343737433637466541333163653839633164323433356337374443",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "554:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x87da9Af1899ad477C67FeA31ce89c1d2435c77DC"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "669:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 25,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "685:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "685:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "31303030",
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "697:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "704:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 31,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 489,
																				"src": "715:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 32,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "715:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "710:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 29,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "710:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "710:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "704:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "697:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 24,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "679:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "679:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "679:48:0"
											}
										]
									},
									"documentation": null,
									"id": 39,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "5075736820546f6b656e",
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "632:12:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5f1e99fd6002bc22df5e263dac4cffab0348d22c1a6c049625f5f34544195400",
														"typeString": "literal_string \"Push Token\""
													},
													"value": "Push Token"
												},
												{
													"argumentTypes": null,
													"hexValue": "50555348",
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "646:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e45a6728791b65ece184df9a321611a31bdb88025ef1d20a1f07f83649c3567c",
														"typeString": "literal_string \"PUSH\""
													},
													"value": "PUSH"
												}
											],
											"id": 22,
											"modifierName": {
												"argumentTypes": null,
												"id": 19,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 899,
												"src": "626:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$899_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "626:27:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:0:0"
									},
									"scope": 197,
									"src": "603:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										531
									],
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "822:1790:0",
										"statements": [
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 92,
														"src": "832:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 49,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "832:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 51,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "848:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "848:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "832:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 55,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "880:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 56,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "887:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 57,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "891:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 54,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "870:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "870:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "870:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307830353043613735453339353763333764444632364435383034366438463939363742383831393063",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1055:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x050Ca75E3957c37dDF26D58046d8F9967B88190c"
														},
														{
															"argumentTypes": null,
															"id": 65,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1127:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 72,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1567:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																						"typeString": "literal_string \"0\""
																					},
																					"value": "0"
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "2b",
																					"id": 73,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1779:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																						"typeString": "literal_string \"+\""
																					},
																					"value": "+"
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "33",
																					"id": 74,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1822:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de",
																						"typeString": "literal_string \"3\""
																					},
																					"value": "3"
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "2b",
																					"id": 75,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2038:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																						"typeString": "literal_string \"+\""
																					},
																					"value": "+"
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "5472616e66657220416c657274",
																					"id": 76,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2081:15:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e7ceb3b2239e6ff943e296a41b933f64369080bdd6ac9609e83ff7b1a9b4e8d2",
																						"typeString": "literal_string \"Tranfer Alert\""
																					},
																					"value": "Tranfer Alert"
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "2b",
																					"id": 77,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2152:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																						"typeString": "literal_string \"+\""
																					},
																					"value": "+"
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "486f6f7261792120",
																					"id": 78,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2195:10:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_ef8329941065b740013bb9bac637895530213e18917023fafcee52737438174c",
																						"typeString": "literal_string \"Hooray! \""
																					},
																					"value": "Hooray! "
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 80,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -15,
																								"src": "2268:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 81,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "2268:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						],
																						"id": 79,
																						"name": "addressToString",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 196,
																						"src": "2252:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																							"typeString": "function (address) pure returns (string memory)"
																						}
																					},
																					"id": 82,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2252:27:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "2073656e7420",
																					"id": 83,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2326:8:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_6b63122024ffe69afe7f94ad1cc7b93882e826a3c819843f418b7509665af098",
																						"typeString": "literal_string \" sent \""
																					},
																					"value": " sent "
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "205055534820746f20796f7521",
																					"id": 84,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2475:15:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_b99a5f8c152fe874a122814b6349b780478d2659d4ce862bbc6c18bbb753ceba",
																						"typeString": "literal_string \" PUSH to you!\""
																					},
																					"value": " PUSH to you!"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																						"typeString": "literal_string \"0\""
																					},
																					{
																						"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																						"typeString": "literal_string \"+\""
																					},
																					{
																						"typeIdentifier": "t_stringliteral_2a80e1ef1d7842f27f2e6be0972bb708b9a135c38860dbe73c27c3486c34f4de",
																						"typeString": "literal_string \"3\""
																					},
																					{
																						"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																						"typeString": "literal_string \"+\""
																					},
																					{
																						"typeIdentifier": "t_stringliteral_e7ceb3b2239e6ff943e296a41b933f64369080bdd6ac9609e83ff7b1a9b4e8d2",
																						"typeString": "literal_string \"Tranfer Alert\""
																					},
																					{
																						"typeIdentifier": "t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8",
																						"typeString": "literal_string \"+\""
																					},
																					{
																						"typeIdentifier": "t_stringliteral_ef8329941065b740013bb9bac637895530213e18917023fafcee52737438174c",
																						"typeString": "literal_string \"Hooray! \""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_6b63122024ffe69afe7f94ad1cc7b93882e826a3c819843f418b7509665af098",
																						"typeString": "literal_string \" sent \""
																					},
																					{
																						"typeIdentifier": "t_stringliteral_b99a5f8c152fe874a122814b6349b780478d2659d4ce862bbc6c18bbb753ceba",
																						"typeString": "literal_string \" PUSH to you!\""
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 70,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -1,
																					"src": "1525:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1525:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 85,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1525:1008:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1295:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 68,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1295:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1295:1256:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1272:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 66,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1272:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1272:1293:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 61,
																	"name": "EPNS_COMM_ADDRESS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1006:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 60,
																"name": "IPUSHCommInterface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "987:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPUSHCommInterface_$12_$",
																	"typeString": "type(contract IPUSHCommInterface)"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "987:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPUSHCommInterface_$12",
																"typeString": "contract IPUSHCommInterface"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sendNotification",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 11,
														"src": "987:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,bytes memory) external"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "987:1588:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "987:1588:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2601:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 48,
												"id": 91,
												"nodeType": "Return",
												"src": "2594:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "783:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "758:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "770:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "757:25:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 93,
												"src": "808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "807:14:0"
									},
									"scope": 197,
									"src": "740:1872:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2750:421:0",
										"statements": [
											{
												"assignments": [
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 101,
														"name": "_bytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 195,
														"src": "2760:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 100,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2760:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 108,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 95,
																			"src": "2801:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2793:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 106,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2793:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2793:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2785:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 104,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2785:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2785:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 102,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2777:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2777:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2760:52:0"
											},
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"name": "HEX",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 195,
														"src": "2822:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 113,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2822:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30313233343536373839616263646566",
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2841:18:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
														"typeString": "literal_string \"0123456789abcdef\""
													},
													"value": "0123456789abcdef"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2822:37:0"
											},
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"name": "_string",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 195,
														"src": "2869:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 117,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2869:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 123,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3432",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															},
															"value": "42"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_42_by_1",
																"typeString": "int_const 42"
															}
														],
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2892:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 119,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2896:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2892:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2869:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 124,
															"name": "_string",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "2915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 126,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2923:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2915:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2928:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2915:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "2915:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 130,
															"name": "_string",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "2941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 132,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2949:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2941:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "78",
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2954:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2941:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "2941:16:0"
											},
											{
												"body": {
													"id": 188,
													"nodeType": "Block",
													"src": "2996:137:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 146,
																		"name": "_string",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "3010:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 152,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "32",
																			"id": 147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3018:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 148,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "3020:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "32",
																				"id": 149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3022:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "3020:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3018:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3010:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 153,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "3027:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 164,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 156,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 101,
																						"src": "3037:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 160,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 157,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 137,
																							"src": "3044:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3132",
																							"id": 158,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3048:2:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "3044:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3037:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "34",
																					"id": 161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3055:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					},
																					"value": "4"
																				},
																				"src": "3037:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3031:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 154,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "3031:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3031:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3027:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "3010:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 166,
															"nodeType": "ExpressionStatement",
															"src": "3010:48:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 167,
																		"name": "_string",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "3072:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 173,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3080:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 169,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "3082:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "32",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3084:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "3082:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3080:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3072:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 174,
																		"name": "HEX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "3089:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 185,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				},
																				"id": 183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 177,
																						"name": "_bytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 101,
																						"src": "3099:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"id": 181,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 180,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 178,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 137,
																							"src": "3106:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3132",
																							"id": 179,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3110:2:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_12_by_1",
																								"typeString": "int_const 12"
																							},
																							"value": "12"
																						},
																						"src": "3106:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3099:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30783066",
																					"id": 182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3116:4:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_15_by_1",
																						"typeString": "int_const 15"
																					},
																					"value": "0x0f"
																				},
																				"src": "3099:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3093:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 175,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "3093:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3093:28:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3089:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "3072:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 187,
															"nodeType": "ExpressionStatement",
															"src": "3072:50:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 140,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2983:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3230",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2987:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "2983:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 189,
												"initializationExpression": {
													"assignments": [
														137
													],
													"declarations": [
														{
															"constant": false,
															"id": 137,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 189,
															"src": "2971:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 136,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2971:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 139,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2980:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2971:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2991:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 143,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "2991:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 145,
													"nodeType": "ExpressionStatement",
													"src": "2991:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2967:166:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 192,
															"name": "_string",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3156:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3149:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 190,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3149:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3149:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 194,
												"nodeType": "Return",
												"src": "3142:22:0"
											}
										]
									},
									"documentation": null,
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addressToString",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 196,
												"src": "2695:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2694:18:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 196,
												"src": "2735:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 97,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2735:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2734:15:0"
									},
									"scope": 197,
									"src": "2670:501:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 198,
							"src": "339:3408:0"
						}
					],
					"src": "33:3714:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							224
						]
					},
					"id": 225,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 199,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 224,
							"linearizedBaseContracts": [
								224
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "726:3:1",
										"statements": []
									},
									"documentation": null,
									"id": 203,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:2:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:0:1"
									},
									"scope": 224,
									"src": "702:27:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "805:34:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 208,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "822:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "822:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 207,
												"id": 210,
												"nodeType": "Return",
												"src": "815:17:1"
											}
										]
									},
									"documentation": null,
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:2:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "788:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "787:17:1"
									},
									"scope": 224,
									"src": "735:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "910:165:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 217,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "920:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$224",
														"typeString": "contract Context"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "920:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 219,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1060:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1060:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 216,
												"id": 221,
												"nodeType": "Return",
												"src": "1053:15:1"
											}
										]
									},
									"documentation": null,
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 223,
												"src": "896:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "896:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "895:14:1"
									},
									"scope": 224,
									"src": "845:230:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 225,
							"src": "525:552:1"
						}
					],
					"src": "0:1078:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							411
						]
					},
					"id": 412,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 226,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 411,
							"linearizedBaseContracts": [
								411
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "901:109:2",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 250,
														"src": "911:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 237,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "923:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 238,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "927:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 242,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "946:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "951:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "938:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "938:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 248,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 236,
													"src": "1002:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 234,
												"id": 249,
												"nodeType": "Return",
												"src": "995:8:2"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "847:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "858:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:2"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "892:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:2"
									},
									"scope": 411,
									"src": "834:176:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "1341:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 261,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "1362:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 262,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "1365:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 260,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															267,
															294
														],
														"referencedDeclaration": 294,
														"src": "1358:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 259,
												"id": 265,
												"nodeType": "Return",
												"src": "1351:50:2"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1287:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1298:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 267,
												"src": "1332:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:2"
									},
									"scope": 411,
									"src": "1274:134:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "1787:92:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "1805:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 280,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "1810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1805:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 282,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "1813:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1797:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "1797:29:2"
											},
											{
												"assignments": [
													286
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 293,
														"src": "1836:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1836:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 290,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 287,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "1848:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 288,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "1852:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1836:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 291,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 286,
													"src": "1871:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 292,
												"nodeType": "Return",
												"src": "1864:8:2"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "1705:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "1716:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "1727:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1704:50:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "1778:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1777:9:2"
									},
									"scope": 411,
									"src": "1692:187:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2186:392:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 303,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2418:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2423:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2418:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 309,
												"nodeType": "IfStatement",
												"src": "2414:45:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "2426:33:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2447:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 302,
															"id": 307,
															"nodeType": "Return",
															"src": "2440:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													311
												],
												"declarations": [
													{
														"constant": false,
														"id": 311,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 327,
														"src": "2469:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 310,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2469:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 312,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2481:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 313,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2485:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2481:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2469:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 317,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "2504:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 318,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "2508:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2504:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 320,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "2513:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2504:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2516:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2496:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "2496:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 325,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 311,
													"src": "2570:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 302,
												"id": 326,
												"nodeType": "Return",
												"src": "2563:8:2"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 328,
												"src": "2132:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 328,
												"src": "2143:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2131:22:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 328,
												"src": "2177:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2177:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2176:9:2"
									},
									"scope": 411,
									"src": "2119:459:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "3100:63:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 338,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "3121:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 339,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3124:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3127:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 337,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															344,
															371
														],
														"referencedDeclaration": 371,
														"src": "3117:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3117:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 342,
												"nodeType": "Return",
												"src": "3110:46:2"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "3046:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "3057:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3045:22:2"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "3091:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3090:9:2"
									},
									"scope": 411,
									"src": "3033:130:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "3733:243:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 356,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "3817:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3821:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3817:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 359,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "3824:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3809:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "3809:28:2"
											},
											{
												"assignments": [
													363
												],
												"declarations": [
													{
														"constant": false,
														"id": 363,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 370,
														"src": "3847:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 362,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3847:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 364,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3859:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 365,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "3863:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3859:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 368,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 363,
													"src": "3968:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 354,
												"id": 369,
												"nodeType": "Return",
												"src": "3961:8:2"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "3651:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3651:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "3662:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3662:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "3673:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 349,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3673:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3650:50:2"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "3724:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3723:9:2"
									},
									"scope": 411,
									"src": "3638:338:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "4487:61:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 381,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4508:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 382,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "4511:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4514:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 380,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															387,
															410
														],
														"referencedDeclaration": 410,
														"src": "4504:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 385,
												"nodeType": "Return",
												"src": "4497:44:2"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "4433:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4433:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "4444:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4444:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4432:22:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 387,
												"src": "4478:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4477:9:2"
									},
									"scope": 411,
									"src": "4420:128:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "5107:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 399,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "5125:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5130:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5125:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 402,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "5133:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5117:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5117:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "5117:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 405,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "5163:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 406,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "5167:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5163:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 397,
												"id": 408,
												"nodeType": "Return",
												"src": "5156:12:2"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 410,
												"src": "5025:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 410,
												"src": "5036:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 410,
												"src": "5047:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5024:50:2"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 410,
												"src": "5098:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5098:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5097:9:2"
									},
									"scope": 411,
									"src": "5012:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 412,
							"src": "589:4588:2"
						}
					],
					"src": "0:5178:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							899
						]
					},
					"id": 900,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 413,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/GSN/Context.sol",
							"file": "../../GSN/Context.sol",
							"id": 414,
							"nodeType": "ImportDirective",
							"scope": 900,
							"sourceUnit": 225,
							"src": "25:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 415,
							"nodeType": "ImportDirective",
							"scope": 900,
							"sourceUnit": 969,
							"src": "57:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 416,
							"nodeType": "ImportDirective",
							"scope": 900,
							"sourceUnit": 412,
							"src": "80:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 417,
							"nodeType": "ImportDirective",
							"scope": 900,
							"sourceUnit": 1030,
							"src": "114:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 418,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 224,
										"src": "1324:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$224",
											"typeString": "contract Context"
										}
									},
									"id": 419,
									"nodeType": "InheritanceSpecifier",
									"src": "1324:7:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 420,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 968,
										"src": "1333:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$968",
											"typeString": "contract IERC20"
										}
									},
									"id": 421,
									"nodeType": "InheritanceSpecifier",
									"src": "1333:6:3"
								}
							],
							"contractDependencies": [
								224,
								968
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the {IERC20} interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using {_mint}.\nFor a generic mechanism see {ERC20MinterPauser}.\n * TIP: For a detailed writeup see our guide\nhttps://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\nto implement supply mechanisms].\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See {IERC20-approve}.",
							"fullyImplemented": true,
							"id": 899,
							"linearizedBaseContracts": [
								899,
								968,
								224
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 424,
									"libraryName": {
										"contractScope": null,
										"id": 422,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 411,
										"src": "1352:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$411",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1346:27:3",
									"typeName": {
										"id": 423,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 427,
									"libraryName": {
										"contractScope": null,
										"id": 425,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1029,
										"src": "1384:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1029",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1378:26:3",
									"typeName": {
										"id": 426,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1396:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 431,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 899,
									"src": "1410:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 430,
										"keyType": {
											"id": 428,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1419:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1410:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 429,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1430:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 437,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 899,
									"src": "1463:69:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 436,
										"keyType": {
											"id": 432,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1472:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1463:49:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 435,
											"keyType": {
												"id": 433,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1492:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1483:28:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 434,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1503:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 439,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 899,
									"src": "1539:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 438,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1539:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 441,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 899,
									"src": "1574:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 440,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1574:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 443,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 899,
									"src": "1600:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 442,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1600:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 445,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 899,
									"src": "1628:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 444,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1628:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "2036:79:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 452,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "2046:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 453,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "2054:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2046:12:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 456,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "2068:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 457,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2078:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2068:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "2068:16:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 460,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2094:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2106:2:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2094:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "2094:14:3"
											}
										]
									},
									"documentation": "@dev Sets the values for {name} and {symbol}, initializes {decimals} with\na default value of 18.\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     * All three of these values are immutable: they can only be set once during\nconstruction.",
									"id": 465,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "1987:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1987:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "2007:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2007:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1986:42:3"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:3"
									},
									"scope": 899,
									"src": "1974:141:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "2232:29:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 470,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 441,
													"src": "2249:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 469,
												"id": 471,
												"nodeType": "Return",
												"src": "2242:12:3"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"functionSelector": "06fdde03",
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2193:2:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "2217:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2217:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:15:3"
									},
									"scope": 899,
									"src": "2180:81:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "2428:31:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 478,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 443,
													"src": "2445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 477,
												"id": 479,
												"nodeType": "Return",
												"src": "2438:14:3"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"functionSelector": "95d89b41",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2389:2:3"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 481,
												"src": "2413:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2413:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2412:15:3"
									},
									"scope": 899,
									"src": "2374:85:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3130:33:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 486,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 445,
													"src": "3147:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "3140:16:3"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\ncalled.\n     * NOTE: This information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n{IERC20-balanceOf} and {IERC20-transfer}.",
									"functionSelector": "313ce567",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3099:2:3"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "3123:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 483,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3123:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3122:7:3"
									},
									"scope": 899,
									"src": "3082:81:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										906
									],
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "3285:36:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 495,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 439,
													"src": "3302:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 494,
												"id": 496,
												"nodeType": "Return",
												"src": "3295:19:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-totalSupply}.",
									"functionSelector": "18160ddd",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 491,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3258:8:3"
									},
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3243:2:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 498,
												"src": "3276:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3276:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3275:9:3"
									},
									"scope": 899,
									"src": "3223:98:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										913
									],
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "3454:42:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 506,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "3471:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 508,
													"indexExpression": {
														"argumentTypes": null,
														"id": 507,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "3481:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3471:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 509,
												"nodeType": "Return",
												"src": "3464:25:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-balanceOf}.",
									"functionSelector": "70a08231",
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 502,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3427:8:3"
									},
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "3398:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3398:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3397:17:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "3445:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3444:9:3"
									},
									"scope": 899,
									"src": "3379:117:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										922
									],
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "3791:80:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 522,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "3811:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3811:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 524,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3825:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 525,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "3836:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "3801:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3801:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "3801:42:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3860:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 520,
												"id": 529,
												"nodeType": "Return",
												"src": "3853:11:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"functionSelector": "a9059cbb",
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 517,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3767:8:3"
									},
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "3717:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3717:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "3736:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3716:35:3"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "3785:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3785:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3784:6:3"
									},
									"scope": 899,
									"src": "3699:172:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										931
									],
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "4027:51:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 541,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4044:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 543,
														"indexExpression": {
															"argumentTypes": null,
															"id": 542,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "4056:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4044:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 545,
													"indexExpression": {
														"argumentTypes": null,
														"id": 544,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "4063:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4044:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 540,
												"id": 546,
												"nodeType": "Return",
												"src": "4037:34:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-allowance}.",
									"functionSelector": "dd62ed3e",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 537,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4000:8:3"
									},
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 548,
												"src": "3948:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 548,
												"src": "3963:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3947:32:3"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 548,
												"src": "4018:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4017:9:3"
									},
									"scope": 899,
									"src": "3929:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										940
									],
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "4305:77:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 559,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "4324:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4324:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 561,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "4338:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 562,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4347:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 558,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "4315:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4315:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "4315:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4371:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 557,
												"id": 566,
												"nodeType": "Return",
												"src": "4364:11:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-approve}.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"functionSelector": "095ea7b3",
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 554,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4281:8:3"
									},
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "4233:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "4250:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4250:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4232:33:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 568,
												"src": "4299:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4299:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4298:6:3"
									},
									"scope": 899,
									"src": "4216:166:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										951
									],
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "4954:205:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 581,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "4974:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 582,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "4982:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 583,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4993:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 580,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4964:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4964:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "4964:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 587,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "5019:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 588,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "5027:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5027:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 597,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "5079:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5087:42:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 590,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "5041:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 592,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 591,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 570,
																			"src": "5053:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5041:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 595,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 593,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 212,
																			"src": "5061:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5061:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5041:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 294,
																"src": "5041:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5041:89:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "5010:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5010:121:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "5010:121:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5148:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 579,
												"id": 603,
												"nodeType": "Return",
												"src": "5141:11:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for ``sender``'s tokens of at least\n`amount`.",
									"functionSelector": "23b872dd",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 576,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4930:8:3"
									},
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 605,
												"src": "4864:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 605,
												"src": "4880:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 605,
												"src": "4899:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4863:51:3"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 605,
												"src": "4948:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4948:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4947:6:3"
									},
									"scope": 899,
									"src": "4842:317:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "5648:121:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 615,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "5667:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5667:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 617,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "5681:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 625,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "5729:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 618,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "5690:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 621,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 619,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 212,
																				"src": "5702:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5702:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5690:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 623,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 622,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "5716:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5690:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 251,
																"src": "5690:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5690:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "5658:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5658:83:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "5658:83:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5758:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 613,
												"id": 630,
												"nodeType": "Return",
												"src": "5751:11:3"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"functionSelector": "39509351",
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 632,
												"src": "5581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 632,
												"src": "5598:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5598:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5580:37:3"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 632,
												"src": "5642:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5642:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5641:6:3"
									},
									"scope": 899,
									"src": "5554:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "6355:167:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 642,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "6374:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6374:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 644,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "6388:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 652,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6436:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6453:39:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 645,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "6397:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 648,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 646,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 212,
																				"src": "6409:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6409:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6397:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 650,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 649,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "6423:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6397:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 294,
																"src": "6397:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6397:96:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 641,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "6365:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6365:129:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "6365:129:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6511:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 640,
												"id": 658,
												"nodeType": "Return",
												"src": "6504:11:3"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"functionSelector": "a457c2d7",
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "6283:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6283:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "6300:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6300:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6282:42:3"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "6349:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 638,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6349:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6348:6:3"
									},
									"scope": 899,
									"src": "6256:266:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "7083:443:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 670,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "7101:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7119:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7111:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 671,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7111:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7111:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7101:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7123:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7093:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7093:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "7093:70:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 680,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "7181:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7202:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7194:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 681,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7194:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7194:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7181:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7206:37:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 679,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7173:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "7173:71:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 690,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "7276:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 691,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "7284:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 692,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "7295:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 689,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "7255:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7255:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "7255:47:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 695,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "7313:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 697,
														"indexExpression": {
															"argumentTypes": null,
															"id": 696,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "7323:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7313:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 702,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "7355:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7363:40:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 698,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "7333:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 700,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 699,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "7343:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7333:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 294,
															"src": "7333:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7333:71:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7313:91:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "7313:91:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 707,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "7414:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 709,
														"indexExpression": {
															"argumentTypes": null,
															"id": 708,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "7424:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7414:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 714,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "7462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 710,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "7437:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 712,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 711,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "7447:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7437:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 251,
															"src": "7437:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:32:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7414:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "7414:55:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 719,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "7493:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 720,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "7501:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 721,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "7512:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 718,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "7484:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7484:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "EmitStatement",
												"src": "7479:40:3"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 725,
												"src": "7015:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 725,
												"src": "7031:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7031:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 725,
												"src": "7050:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7014:51:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7083:0:3"
									},
									"scope": 899,
									"src": "6996:530:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "7861:305:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 733,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "7879:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7898:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7890:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 734,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7890:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7890:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7879:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7902:33:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7871:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7871:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "7871:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7976:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7968:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 743,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7968:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7968:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 747,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "7980:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 748,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7989:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 742,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "7947:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7947:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "7947:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 751,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "8007:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 754,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "8039:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 752,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "8022:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 251,
															"src": "8022:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8022:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8007:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "8007:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 758,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "8056:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 760,
														"indexExpression": {
															"argumentTypes": null,
															"id": 759,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "8066:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8056:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 765,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "8100:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 761,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "8077:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 763,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 762,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "8087:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8077:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 251,
															"src": "8077:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8077:30:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8056:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "8056:51:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8139:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8131:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 770,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8131:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8131:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 774,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "8143:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 775,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "8152:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 769,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "8122:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8122:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "EmitStatement",
												"src": "8117:42:3"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 779,
												"src": "7811:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7811:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 779,
												"src": "7828:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7828:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7810:33:3"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7861:0:3"
									},
									"scope": 899,
									"src": "7796:370:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "8550:345:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 787,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8568:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8587:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8579:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 788,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8579:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8579:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8568:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8591:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8560:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8560:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "8560:67:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 797,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "8659:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8676:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8668:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 798,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8668:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8668:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 802,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "8680:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 796,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "8638:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8638:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "8638:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 805,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "8698:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 807,
														"indexExpression": {
															"argumentTypes": null,
															"id": 806,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "8708:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8698:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 812,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "8742:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8750:36:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 808,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "8719:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 810,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 809,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "8729:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8719:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 294,
															"src": "8719:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8719:68:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8698:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "8698:89:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 817,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "8797:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 820,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "8829:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 818,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "8812:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 267,
															"src": "8812:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8812:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8797:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "8797:39:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 825,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "8860:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8877:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8869:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 826,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8869:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8869:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 830,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "8881:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 824,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "8851:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8851:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "EmitStatement",
												"src": "8846:42:3"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a {Transfer} event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 834,
												"src": "8500:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8500:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 834,
												"src": "8517:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8517:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8499:33:3"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8550:0:3"
									},
									"scope": 899,
									"src": "8485:410:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "9403:257:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 844,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "9421:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9438:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9430:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 845,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9430:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9430:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9421:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9442:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 843,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9413:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9413:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "9413:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 854,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "9499:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9518:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9510:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 855,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9510:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9510:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9499:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9522:36:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9491:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "9491:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 863,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "9570:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 866,
															"indexExpression": {
																"argumentTypes": null,
																"id": 864,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "9582:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9570:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 867,
														"indexExpression": {
															"argumentTypes": null,
															"id": 865,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "9589:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9570:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 868,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "9600:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9570:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "9570:36:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 872,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "9630:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 873,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "9637:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 874,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "9646:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 871,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "9621:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9621:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "EmitStatement",
												"src": "9616:37:3"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an {Approval} event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 878,
												"src": "9338:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9338:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 878,
												"src": "9353:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9353:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 878,
												"src": "9370:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9370:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9337:48:3"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9403:0:3"
									},
									"scope": 899,
									"src": "9320:340:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "10033:38:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 883,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "10043:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 884,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "10055:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10043:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "10043:21:3"
											}
										]
									},
									"documentation": "@dev Sets {decimals} to a value other than the default one of 18.\n     * WARNING: This function should only be called from the constructor. Most\napplications that interact with token contracts will not expect\n{decimals} to ever change, and may work incorrectly if it does.",
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 888,
												"src": "10007:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 879,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10007:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10006:17:3"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10033:0:3"
									},
									"scope": 899,
									"src": "9983:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "10747:3:3",
										"statements": []
									},
									"documentation": "@dev Hook that is called before any transfer of tokens. This includes\nminting and burning.\n     * Calling conditions:\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\nwill be to transferred to `to`.\n- when `from` is zero, `amount` tokens will be minted for `to`.\n- when `to` is zero, `amount` of ``from``'s tokens will be burned.\n- `from` and `to` are never both zero.\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 898,
												"src": "10688:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 898,
												"src": "10702:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 898,
												"src": "10714:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10714:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10687:42:3"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10747:0:3"
									},
									"scope": 899,
									"src": "10658:92:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "1306:9446:3"
						}
					],
					"src": "0:10753:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							968
						]
					},
					"id": 969,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 901,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP.",
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"functionSelector": "18160ddd",
									"id": 906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:4"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 906,
												"src": "236:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "235:9:4"
									},
									"scope": 968,
									"src": "190:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"functionSelector": "70a08231",
									"id": 913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 913,
												"src": "347:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "346:17:4"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 913,
												"src": "387:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "386:9:4"
									},
									"scope": 968,
									"src": "328:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"functionSelector": "a9059cbb",
									"id": 922,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 922,
												"src": "634:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 922,
												"src": "653:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "633:35:4"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 922,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 919,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "686:6:4"
									},
									"scope": 968,
									"src": "616:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
									"functionSelector": "dd62ed3e",
									"id": 931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 931,
												"src": "987:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 931,
												"src": "1002:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "986:32:4"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 931,
												"src": "1042:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1041:9:4"
									},
									"scope": 968,
									"src": "968:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
									"functionSelector": "095ea7b3",
									"id": 940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 940,
												"src": "1721:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 940,
												"src": "1738:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1720:33:4"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 940,
												"src": "1772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 937,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1771:6:4"
									},
									"scope": 968,
									"src": "1704:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"functionSelector": "23b872dd",
									"id": 951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 951,
												"src": "2107:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 951,
												"src": "2123:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 951,
												"src": "2142:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2106:51:4"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 951,
												"src": "2176:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 948,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2176:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2175:6:4"
									},
									"scope": 968,
									"src": "2085:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 959,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 959,
												"src": "2366:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 959,
												"src": "2388:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 959,
												"src": "2408:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2365:57:4"
									},
									"src": "2351:72:4"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 967,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 967,
												"src": "2597:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 967,
												"src": "2620:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 967,
												"src": "2645:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2596:63:4"
									},
									"src": "2582:78:4"
								}
							],
							"scope": 969,
							"src": "96:2566:4"
						}
					],
					"src": "0:2663:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.0.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1029
						]
					},
					"id": 1030,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type",
							"fullyImplemented": true,
							"id": 1029,
							"linearizedBaseContracts": [
								1029
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "751:544:5",
										"statements": [
											{
												"assignments": [
													978
												],
												"declarations": [
													{
														"constant": false,
														"id": 978,
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 994,
														"src": "1003:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 977,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1003:16:5"
											},
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 994,
														"src": "1029:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 980,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1029:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 983,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1051:66:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1029:88:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1192:36:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1194:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1218:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1206:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:20:5"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1194:8:5"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 972,
														"isOffset": false,
														"isSlot": false,
														"src": "1218:7:5",
														"valueSize": 1
													},
													{
														"declaration": 978,
														"isOffset": false,
														"isSlot": false,
														"src": "1194:8:5",
														"valueSize": 1
													}
												],
												"id": 984,
												"nodeType": "InlineAssembly",
												"src": "1183:45:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 985,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1245:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 986,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "1257:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1245:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 988,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1272:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1284:3:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1272:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1245:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 992,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1244:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 976,
												"id": 993,
												"nodeType": "Return",
												"src": "1237:51:5"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following\ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n====",
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 995,
												"src": "705:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "704:17:5"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 995,
												"src": "745:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:6:5"
									},
									"scope": 1029,
									"src": "685:610:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "2283:320:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1005,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2309:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1029",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1029",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2301:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1003,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2301:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2301:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2301:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1008,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "2326:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2301:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2334:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2293:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "2293:73:5"
											},
											{
												"assignments": [
													1014,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1027,
														"src": "2455:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1013,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2455:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1021,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2505:2:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1015,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "2473:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2473:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 1017,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "2496:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2473:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2454:54:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1023,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "2526:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2535:60:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1022,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2518:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2518:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "2518:78:5"
											}
										]
									},
									"documentation": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].",
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1028,
												"src": "2231:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1028,
												"src": "2258:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2230:43:5"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2283:0:5"
									},
									"scope": 1029,
									"src": "2212:391:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1030,
							"src": "93:2512:5"
						}
					],
					"src": "0:2606:5"
				},
				"id": 5
			}
		}
	}
}